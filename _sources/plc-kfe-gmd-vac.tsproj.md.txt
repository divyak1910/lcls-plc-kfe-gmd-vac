PLC Project (1): plc_kfe_gmd_vac
================================

    Project root: /home/travis/build/pcdshub/lcls-plc-kfe-gmd-vac/plc/plc-kfe-gmd-vac
    Project path: plc_kfe_gmd_vac/plc_kfe_gmd_vac.plcproj
    TMC path:     plc_kfe_gmd_vac/plc_kfe_gmd_vac.tmc
    AMS ID:       5.59.121.68.1.1
    IP Address:   5.59.121.68 (* based on AMS ID)
    Port:         851

    Source files:
        1.) plc_kfe_gmd_vac/DUTs/E_GasType.TcDUT
        2.) plc_kfe_gmd_vac/DUTs/E_HomeState.TcDUT
        3.) plc_kfe_gmd_vac/DUTs/E_MoveState.TcDUT
        4.) plc_kfe_gmd_vac/DUTs/ST_HV.TcDUT
        5.) plc_kfe_gmd_vac/DUTs/ST_PressureSensor.TcDUT
        6.) plc_kfe_gmd_vac/DUTs/ST_VGP.TcDUT
        7.) plc_kfe_gmd_vac/GVLs/GVL_INJ.TcGVL
        8.) plc_kfe_gmd_vac/GVLs/GVL_GMD.TcGVL
        9.) plc_kfe_gmd_vac/GVLs/GVL_VARIABLES.TcGVL
        10.) plc_kfe_gmd_vac/PlcTask.TcTTO
        11.) plc_kfe_gmd_vac/POUs/FB_HighVoltage.TcPOU
        12.) plc_kfe_gmd_vac/POUs/FB_PressureTransducer.TcPOU
        13.) plc_kfe_gmd_vac/POUs/FB_RTD.TcPOU
        14.) plc_kfe_gmd_vac/POUs/FB_VGP.TcPOU
        15.) plc_kfe_gmd_vac/POUs/MAIN.TcPOU
        16.) plc_kfe_gmd_vac/POUs/PRG_DIAGNOSTIC.TcPOU
        17.) plc_kfe_gmd_vac/POUs/PRG_Gas_Selection.TcPOU
        18.) plc_kfe_gmd_vac/POUs/PRG_GMD.TcPOU
        19.) plc_kfe_gmd_vac/POUs/PRG_HV_ILK.TcPOU
        20.) plc_kfe_gmd_vac/POUs/PRG_INJ.TcPOU
        21.) plc_kfe_gmd_vac/POUs/PRG_PressureControl.TcPOU
        22.) plc_kfe_gmd_vac/POUs/PRG_Purge.TcPOU
        23.) plc_kfe_gmd_vac/POUs/PRG_VGP.TcPOU

    POUs:
        1.) MAIN
        2.) PRG_DIAGNOSTIC
        3.) PRG_Gas_Selection
        4.) PRG_GMD
        5.) PRG_HV_ILK
        6.) PRG_INJ
        7.) PRG_PressureControl
        8.) PRG_Purge
        9.) PRG_VGP

    GVLs:
        1.) GVL_INJ
        2.) GVL_GMD
        3.) GVL_VARIABLES

DUTs/E_GasType.TcDUT (TcPlcObject)
----------------------------------

### E_GasType: Declaration

```vhdl
TYPE E_GasType :
(
	none := 0,
	Neon,
	Argon,
	Krypton,
	Xenon
);
END_TYPE
```


DUTs/E_HomeState.TcDUT (TcPlcObject)
------------------------------------

### E_HomeState: Declaration

```vhdl
TYPE E_HomeState :
(
	READY,
	INIT,
	MOVING,
	MOVING2,
	CHECK,
	ERROR,
	WRITE,
	DONE
	
) UDINT;
END_TYPE
```


DUTs/E_MoveState.TcDUT (TcPlcObject)
------------------------------------

### E_MoveState: Declaration

```vhdl
TYPE E_MoveState :
(
	MOVESTATE_ABORT,
	MOVESTATE_INIT,
	MOVESTATE_ENABLE,
	MOVESTATE_FORWARD,
	MOVESTATE_BACKWARDS,
	MOVESTATE_READY,
	MOVESTATE_MOVING,
	MOVESTATE_NEWTARGETPOSITION,
	MOVESTATE_NEWTARGETPOSITION2,
	MOVESTATE_ERROR,
	MOVESTATE_RESET,
	MOVESTATE_HALT,
	MOVESTATE_HOME
) UDINT;
END_TYPE
```


DUTs/ST_HV.TcDUT (TcPlcObject)
------------------------------

### ST_HV: Declaration

```vhdl
TYPE ST_HV :
STRUCT
	{attribute 'pytmc' := '
    pv: HV_SW;
	io: io;
    '}
	HV_sw: BOOL:=false;
	{attribute 'pytmc' := '
    pv: HV_DO;
	io: i;
    '}
	q_HV_DO: BOOL;
	{attribute 'pytmc' := '
    pv: ILK_OK;
	io: i;
    '}
	xIlkOK	:	BOOL := FALSE; // Interlock Bit
END_STRUCT
END_TYPE
```


DUTs/ST_PressureSensor.TcDUT (TcPlcObject)
------------------------------------------

### ST_PressureSensor: Declaration

```vhdl
TYPE ST_PressureSensor :
STRUCT
	{attribute 'pytmc' := '
    pv: PRESS;
	io: i;
    '}
	rPRESS: REAL; //This is the human-readable pressure
	{attribute 'pytmc' := '
    pv: iPRESS;
	io: i;
    '}
	iPRESS_R : INT ; //input pressure in machine form
	{attribute 'pytmc' := '
    pv: PRESS_SP;
	io: io;
    '}	
	rPressSP: REAL ; // EPICS Pressure setpoint 
	{attribute 'pytmc' := '
    pv: MIN_SP;
	io: io;
    '}
	rMinPressSP : REAL;  // Low limit of pressure setpoint 
	{attribute 'pytmc' := '
    pv: MAX_SP;
	io: io;
    '}
	rMaxPressSP : REAL;	// High limit of pressure setpoint
	{attribute 'pytmc' := '
    pv: SCALE;
	io: io;
    '}
	rFULL_SCALE: REAL; // Full scale 
	{attribute 'pytmc' := '
    pv: ALARM;
	field: ZNAM Normal; 
	field: ONAM Alarm;
	io: i;
    '}
    xPstateAlarm : BOOL; // 0:Normal, 1:Alarm
	

END_STRUCT
END_TYPE
```


DUTs/ST_VGP.TcDUT (TcPlcObject)
-------------------------------

### ST_VGP: Declaration

```vhdl
TYPE ST_VGP :
STRUCT

	{attribute 'pytmc' := '
    pv: POS_RDBK;
	io: i;
    '}
	// Inputs
	i_iPosition	:	REAL; //Encoder position readback (if it exists)
	{attribute 'pytmc' := '
    pv: ENC_RDBK;
	io: i;
    '}
	// Inputs
	rEnoder_Position	:	REAL; //Encoder position readback (if it exists)
	{attribute 'pytmc' := '
    pv: ERROR;
	io: i;
    '}
	// Inputs
	pv_xError	:	BOOL;
	
	{attribute 'pytmc' := '
    pv: IS_HOMED;
	io: i;
    '}
	// Inputs
	pv_xHomed	:	BOOL :=false;
	
	//Softvariables
	{attribute 'pytmc' := '
    pv: ILK_OK;
	io: i;
    '}
	xIlkOK	:	BOOL := FALSE; // Interlock Bit
	//Manually Pressing valve "Open/Close" on EDM
	{attribute 'pytmc' := '
    pv: OPN_SW;
	io: io;
    '}
	pv_xOPN_SW	: BOOL;
	
	{attribute 'pytmc' := '
    pv: GO_SW;
	io: io;
    '}
	pv_xGo_SW	: BOOL;
	
	{attribute 'pytmc' := '
    pv: HOME_SW;
	io: io;
    '}
	pv_xHome_SW	: BOOL;
	
	{attribute 'pytmc' := '
    pv: ABORT;
	io: io;
    '}
	pv_xABORT_SW	: BOOL;
	
	rUpperLimit	:	REAL:=100;	//Percentage Upper limit on valve open
	{attribute 'pytmc' := '
	pv: POS_CTRL;
	io: io; 
	'}
	rReqPosition	:	REAL; 
	// Outputs
	{attribute 'pytmc' := '
	pv: POS_DES;
	io: io;
	'}
	q_iRawPosition	:	INT; //Position control 
	{attribute 'pytmc' := '
	pv: STATE;
	type: mbbi ;
	field: ZRST CLOSE ;
	field: ONST OPEN;
	field: TWST PRESS CNTRL ;
	field: THST MANUAL CNTRL ;
	io: io;
	'}
	eValveControl	:	E_VCN := CloseValve; // Valve control state
	/// state machine state 
	{attribute 'pytmc' := '
	pv: Axis_STATE;
	io: io;
	'}
	state: E_MoveState; //Axis Move state
	ftIlk	:	F_TRIG;	

END_STRUCT
END_TYPE
```


GVLs/GVL_INJ.TcGVL (TcPlcObject)
--------------------------------

### GVL_INJ: Declaration

```vhdl
VAR_GLOBAL
		
//GVL_Devices
	{attribute 'pytmc' :=' pv: EM1K0:GEM:VCN:40 '}
	VCN_40 : FB_VCN;
	{attribute 'pytmc' :=' pv: EM1K0:GEM:VGP:40 '}
	VGP_40 : FB_VGP;
	
	{attribute 'pytmc' :=' pv: EM1K0:GEM:VVC:80 '}
	VVC_80:FB_VVC;
	{attribute 'pytmc' :=' pv: EM1K0:GEM:VVC:81 '}
	VVC_81:FB_VVC;
	{attribute 'pytmc' :=' pv: EM1K0:GEM:VVC:82 '}
	VVC_82:FB_VVC;
	{attribute 'pytmc' :=' pv: EM1K0:GEM:VVC:83 '}
	VVC_83 : FB_VVC;
	{attribute 'pytmc' :=' pv: EM1K0:GEM:VVC:84 '}
	VVC_84 : FB_VVC;
	{attribute 'pytmc' :=' pv: EM1K0:GEM:VVC:85 '}
	VVC_85 : FB_VVC;
	{attribute 'pytmc' :=' pv: EM1K0:GEM:VVC:86 '}
	VVC_86 : FB_VVC;
	

	{attribute 'pytmc' :=' pv: EM1K0:GEM:GCM:80 '}
	GCM_80: FB_GCM;
	
	{attribute 'pytmc' :=' pv: EM1K0:GEM:INJ_Override '}
	
	xOverrideMode : BOOL:= false;
		
//GVL_Sensors

(*Pressure Meter*)
	{attribute 'pytmc' :=' pv: EM1K0:GEM:GFM:86 '}
	GFM_86 :FB_PressureTransducer;
	{attribute 'pytmc' :=' pv: EM1K0:GEM:GFM:85 '}
	GFM_85 :FB_PressureTransducer;
	{attribute 'pytmc' :=' pv: EM1K0:GEM:GFM:84 '}
	GFM_84 :FB_PressureTransducer;
	{attribute 'pytmc' :=' pv: EM1K0:GEM:GFM:83 '}
	GFM_83 :FB_PressureTransducer;	

(*HV*)
	{attribute 'pytmc' :=' pv: EM1K0:GEM:HV:1 '}
	hv1 : FB_HighVoltage;
	{attribute 'pytmc' :=' pv: EM1K0:GEM:HV:2 '}
	hv2 : FB_HighVoltage;
	{attribute 'pytmc' :=' pv: EM1K0:GEM:RTD:1 '}
	RTD : FB_RTD;

END_VAR
```


GVLs/GVL_GMD.TcGVL (TcPlcObject)
--------------------------------

### GVL_GMD: Declaration

```vhdl
VAR_GLOBAL

// To Remove: 
// Includes 'fake' elements for satisfying interlocks. Delete these after creating better interlock functions 

// Defaults to the closed position. No command required. 
fake_always_closed_vent_valve : ST_VVC;

// FB_MKS317

{attribute 'pytmc' := ' pv: EM1K0:GMD:GPI:10 '}
fb_EM1K0_GMD_GPI_10 : FB_MKS317;
{attribute 'pytmc' := ' pv: EM1K0:GMD:GPI:40 '}
fb_EM1K0_GMD_GPI_40 : FB_MKS317;
{attribute 'pytmc' := ' pv: EM1K0:GMD:GPI:70 '}
fb_EM1K0_GMD_GPI_70 : FB_MKS317;

// FB_PTM_TwisTorr

{attribute 'pytmc' := ' pv: EM1K0:GMD:PTM:10 '}
fb_EM1K0_GMD_PTM_10 : FB_PTM_TwisTorr;
{attribute 'pytmc' := ' pv: EM1K0:GMD:PTM:20 '}
fb_EM1K0_GMD_PTM_20 : FB_PTM_TwisTorr;
{attribute 'pytmc' := ' pv: EM1K0:GMD:PTM:30 '}
fb_EM1K0_GMD_PTM_30 : FB_PTM_TwisTorr;
{attribute 'pytmc' := ' pv: EM1K0:GMD:PTM:40 '}
fb_EM1K0_GMD_PTM_40 : FB_PTM_TwisTorr;
{attribute 'pytmc' := ' pv: EM1K0:GMD:PTM:50 '}
fb_EM1K0_GMD_PTM_50 : FB_PTM_TwisTorr;
{attribute 'pytmc' := ' pv: EM1K0:GMD:PTM:60 '}
fb_EM1K0_GMD_PTM_60 : FB_PTM_TwisTorr;
{attribute 'pytmc' := ' pv: EM1K0:GMD:PTM:70 '}
fb_EM1K0_GMD_PTM_70 : FB_PTM_TwisTorr;

// FB_VRC

{attribute 'pytmc' := ' pv: EM1K0:GMD:VRC:10 '}
fb_EM1K0_GMD_VRC_10 : FB_VRC;
{attribute 'pytmc' := ' pv: EM1K0:GMD:VRC:20 '}
fb_EM1K0_GMD_VRC_20 : FB_VRC;
{attribute 'pytmc' := ' pv: EM1K0:GMD:VRC:30 '}
fb_EM1K0_GMD_VRC_30 : FB_VRC;
{attribute 'pytmc' := ' pv: EM1K0:GMD:VRC:50 '}
fb_EM1K0_GMD_VRC_50 : FB_VRC;
{attribute 'pytmc' := ' pv: EM1K0:GMD:VRC:60 '}
fb_EM1K0_GMD_VRC_60 : FB_VRC;
{attribute 'pytmc' := ' pv: EM1K0:GMD:VRC:70 '}
fb_EM1K0_GMD_VRC_70 : FB_VRC;

// FB_MKS422

{attribute 'pytmc' := ' pv: EM1K0:GMD:GCC:10 '}
fb_EM1K0_GMD_GCC_10 : FB_MKS422;
{attribute 'pytmc' := ' pv: EM1K0:GMD:GCC:20 '}
fb_EM1K0_GMD_GCC_20 : FB_MKS422;
{attribute 'pytmc' := ' pv: EM1K0:GMD:GCC:30 '}
fb_EM1K0_GMD_GCC_30 : FB_MKS422;
{attribute 'pytmc' := ' pv: EM1K0:GMD:GCC:40 '}
fb_EM1K0_GMD_GCC_40 : FB_MKS422;
{attribute 'pytmc' := ' pv: EM1K0:GMD:GCC:50 '}
fb_EM1K0_GMD_GCC_50 : FB_MKS422;
{attribute 'pytmc' := ' pv: EM1K0:GMD:GCC:60 '}
fb_EM1K0_GMD_GCC_60 : FB_MKS422;
{attribute 'pytmc' := ' pv: EM1K0:GMD:GCC:70 '}
fb_EM1K0_GMD_GCC_70 : FB_MKS422;

// FB_EbaraEVA

{attribute 'pytmc' := ' pv: EM1K0:GMD:PRT:40 '}
fb_EM1K0_GMD_PRT_40 : FB_EbaraEVA;

END_VAR
```


GVLs/GVL_VARIABLES.TcGVL (TcPlcObject)
--------------------------------------

### GVL_VARIABLES: Declaration

```vhdl
VAR_GLOBAL
	xSystemOverrideMode : BOOL; (* Global system override for the prototype section*)
END_VAR
```


PlcTask.TcTTO (TcPlcObject)
---------------------------


POUs/FB_HighVoltage.TcPOU (TcPlcObject)
---------------------------------------

### FB_HighVoltage: Declaration

```vhdl
FUNCTION_BLOCK FB_HighVoltage
VAR_INPUT
	i_xExtIlkOK	:	BOOL; //External Interlock, SET to TRUE if not used
END_VAR
VAR_OUTPUT
	{attribute 'pytmc' := '
    pv:
	'}
	hv:ST_HV;
END_VAR
VAR
	(*outputs*)
	q_HV_DO AT %Q*: BOOL;
END_VAR
```

### FB_HighVoltage: ST

```vhdl
hv.xIlkOK := i_xExtIlkOK;

q_HV_DO := hv.HV_sw AND hv.xIlkOK;

(*soft io mapping*)
hv.q_HV_DO := q_HV_DO;
```


POUs/FB_PressureTransducer.TcPOU (TcPlcObject)
----------------------------------------------

### FB_PressureTransducer: Declaration

```vhdl
FUNCTION_BLOCK FB_PressureTransducer
VAR_OUTPUT
	{attribute 'pytmc' := 'pv:'}
	Sensor : ST_PressureSensor;
END_VAR

VAR_INPUT
	rDefaultSP : REAL; (* Must assign a default value at instantiation*)
	i_rFULL_SCALE: REAL;
END_VAR

VAR
	iCurrent : REAL;
	AlarmTOF : TOF;

	(*IOs to be linked*)
	iError AT %I* : BOOL; // Link to terminal diagnostics
	i_iPRESS_R AT %I* :INT; // input Pressure // Link to analog Input
END_VAR
```

### FB_PressureTransducer: ST

```vhdl
// for SETRA  4-20mA outout

(* Real-value calculation *)
Sensor.rFull_Scale:=i_rFULL_SCALE;
iCurrent := 20*INT_TO_REAL(Sensor.iPRESS_R)/32767;

  IF iError THEN; //reading less than 4mA
  	 Sensor.rPRESS := -1;
	 Sensor.xPStateAlarm:= TRUE;
	 ELSE 
		 Sensor.rPRESS := LREAL_TO_REAL(iCurrent*Sensor.rFull_Scale); //FULL scale in Psi for pressure transducer ???
  END_IF
  
 (* Validate setpoint *)
	IF (Sensor.rPressSP < Sensor.rMinPressSP OR Sensor.rPressSP > Sensor.rMaxPressSP) THEN;
		Sensor.rPressSP := rDefaultSP;
	END_IF

 (* Set alarm bit when pressure lower and equal to setpoint, delay off for 60s*)
  
  AlarmTOF (IN := Sensor.rPRESS <= Sensor.rPressSP, PT := T#60S, Q => Sensor.xPstateAlarm);
  
	 
	 
  
 (*Soft IO Mapping*)
  ACT_IO();
```

### FB_PressureTransducer.ACT_IO: ST

```vhdl
Sensor.iPRESS_R := i_iPRESS_R;
```


POUs/FB_RTD.TcPOU (TcPlcObject)
-------------------------------

### FB_RTD: Declaration

```vhdl
FUNCTION_BLOCK FB_RTD
VAR_INPUT
	iScale: INT := 10;
END_VAR
VAR_OUTPUT
	{attribute 'pytmc' := '
		pv: TEMP
		io: input
	'}
	fTemp: LREAL;
	
	{attribute 'pytmc' := '
		pv: CONN
		io: input
		ONAM: Connected
		ZNAM: Disconnected
	}
	bConnected: BOOL;
	
	{attribute 'pytmc' := '
		pv: ERR
		io: input
	'}
	bError AT %I*: BOOL;
	
	bUnderrange AT %I*: BOOL;
	bOverrange AT %I*: BOOL;
END_VAR
VAR
	iRaw AT %I*: INT;
END_VAR
```

### FB_RTD: ST

```vhdl
bConnected := NOT (bOverrange AND bError);
fTemp := iRaw / iScale;
```


POUs/FB_VGP.TcPOU (TcPlcObject)
-------------------------------

### FB_VGP: Declaration

```vhdl
(* This function implements the Basic functions for the Vat Motorized valve*)
FUNCTION_BLOCK FB_VGP
VAR_INPUT
	i_xExtIlkOK	:	BOOL; //External Interlock, SET to TRUE if not used
	i_ReqPos	:	REAL; //Requested position
	
	arrTable	: ARRAY[1..14,1..2] OF FLOAT;
END_VAR
VAR_OUTPUT
	{attribute 'pytmc' := '
    pv:
	'}
	q_stVGP	:	ST_VGP; // valve structure
END_VAR
VAR_IN_OUT
	
END_VAR

VAR CONSTANT
	
	rClosePosition : REAL:=0; // Encoder Min. Fully Closed
	rMaxDiffPressure: REAL:= 22.5; //Torr
END_VAR

VAR
	rOpenPosition: REAL:=1645; // Encoder MAX. Fully Open
	rTargetPosition : REAL;
	rTargetVelocity: REAL:=30;
	rHomingVelocity: REAL:=10;
	rHomingDistance: REAL:=20;//every 150 is 10% , 1%  is 14.975
	rOldTargetPosition: REAL;
		
	// 
	/// axis reference data structure 
	Axis: AXIS_REF;
	//
	InfoData_State AT %I*: UINT ;
	
	// Axis MC functions

	fbPowerAxis: MC_Power;
	/// debug function block output data 
	PowerAxisOut: ST_McOutputs;
	fbMoveAxisABS: MC_MoveAbsolute;
	/// debug function block output data 
	MoveAbsoluteOut: ST_McOutputs;
	fbMoveAxisABS2: MC_MoveAbsolute;
	/// debug function block output data 
	MoveAbsoluteOut2: ST_McOutputs;
	
	fbReset: MC_Reset;
	/// debug function block output data 
	ResetOut: ST_McOutputs;
	MoveAxisREL: MC_MoveAbsolute;
	MoveRelativeOut: ST_McOutputs;
	
	
	nErrorID: UDINT;
	bError : Bool;
	sErrorMessage : STRING;
	rOverride: LREAL := 100;
	fbHalt: MC_Halt;
	
	
	// Homing Functions
	bGo:BOOL := FALSE; //to execute motion
	bHome:BOOL :=FALSE; // should be set to true
	bEnable:Bool; //to be removed
	fbMoveRel: MC_MoveRelative;
	fbSetPosition: MC_SetPosition;
	fbWriteParameter: MC_WriteBoolParameter;
	HomeState: E_HomeState;
	
	
	// interpolation
	bInit : BOOL := TRUE;
	eMode           : E_CTRL_MODE;
	iCounter:INT;
	//CONTROL
	stCTRL_LIN_INTERPOLATION_PARAMS		: ST_CTRL_LIN_INTERPOLATION_PARAMS;
	fbCTRL_LIN_INTERPOLATION					: FB_CTRL_LIN_INTERPOLATION;
	arrTable_ENC : ARRAY[1..14,1..2] OF FLOAT;
	//Readdback
	stCTRL_LIN_INTERPOLATION_PARAMS_ENC		: ST_CTRL_LIN_INTERPOLATION_PARAMS;
	fbCTRL_LIN_INTERPOLATION_ENC					: FB_CTRL_LIN_INTERPOLATION;

END_VAR
```

### FB_VGP: ST

```vhdl
/// Interpolation  function initialization
ACT_INIT();

// Interlocking
q_stVGP.xIlkOK := i_xExtIlkOK;
(*Checking which Control mode is selected*)
IF q_stVGP.xIlkOK AND NOT (q_stVGP.pv_xError) THEN
	IF q_stVGP.eValveControl = OpenValve THEN
		q_stVGP.rReqPosition := q_stVGP.rUpperLimit;
	ELSIF q_stVGP.eValveControl = CloseValve THEN
		q_stVGP.rReqPosition := 0;
	ELSIF q_stVGP.eValveControl = ManualControl THEN
		q_stVGP.rReqPosition := LIMIT(0, q_stVGP.rReqPosition, q_stVGP.rUpperLimit);
	ELSIF q_stVGP.eValveControl = PressureControl THEN
		 q_stVGP.rReqPosition := LIMIT(0, i_ReqPos, q_stVGP.rUpperLimit);
	END_IF
ELSE
	q_stVGP.rReqPosition := 0;
	q_stVGP.eValveControl := CloseValve;//CloseValve;
	bGo:=FALSE;
END_IF


//Check the Drive State

IF (*(InfoData_State<>16#8) OR*) (q_stVGP.state = MOVESTATE_ERROR) THEN
	q_stVGP.pv_xError:=TRUE;
ELSE
	q_stVGP.pv_xError:=FALSE;
	// Call function to execute move
	// call motion function blocks???
END_IF


IF (q_stVGP.pv_xABORT_SW ) THEN
	q_stVGP.pv_xABORT_SW := FALSE;
	q_stVGP.state:= MOVESTATE_ABORT;
END_IF


ACT_LIN_INTERPOLATION();
ACT_AXIS();
//ACT_HOME();
```

### FB_VGP.ACT_AXIS: ST

```vhdl
//update the axis status
AXIS();
q_stVGP.rEnoder_Position := LREAL_TO_REAL(Axis.NcToPlc.ActPos); // encoder position

//Homing STATE is missing

// state machine for axis motion
	(* move axis using a state machine *)
	CASE q_stVGP.state OF

		MOVESTATE_INIT :	(* initialisation *)
			(* initialize all function blocks *)
			fbMoveAxisABS.Execute := FALSE;
			fbMoveAxisABS2.Execute := FALSE;
			fbReset.Execute := FALSE;
			fbHALT.Execute :=FALSE;//
			q_stVGP.state := MOVESTATE_ENABLE; // Check homing first

		MOVESTATE_ENABLE :
			fbPowerAxis.Enable :=  TRUE;
			fbPowerAxis.Enable_Positive := TRUE;
			fbPowerAxis.Enable_Negative := TRUE;
			IF fbPowerAxis.Status THEN
				q_stVGP.state := MOVESTATE_READY;
			ELSIF fbPowerAxis.Error THEN
				q_stVGP.state := MOVESTATE_ERROR;
			END_IF
		
		MOVESTATE_READY: // waiting for move command
			IF (HomeState = READY) AND (q_stVGP.pv_xHome_SW) THEN
					HomeState:= INIT;
					q_stVGP.pv_xHome_SW:=false;
					bHome := false;
					q_stVGP.state := MOVESTATE_HOME;
					ELSE 
					q_stVGP.state := MOVESTATE_READY;
				END_IF
			IF (q_stVGP.pv_xGo_SW) AND i_xExtIlkOK(* AND( rOldTargetPosition <> rTargetPosition) *) THEN
				q_stVGP.pv_xGo_SW := false;
				q_stVGP.state := MOVESTATE_NEWTARGETPOSITION;	
			END_IF
			IF NOT fbPowerAxis.Status THEN
				q_stVGP.state := MOVESTATE_ENABLE;
			ELSIF fbPowerAxis.Error THEN
				q_stVGP.state := MOVESTATE_ERROR;
			END_IF
			
		MOVESTATE_HOME:
				if (HomeState = DONE) THEN
					 q_stVGP.state := MOVESTATE_READY;
					 q_stVGP.pv_xHomed := TRUE;
				END_IF
				
				if (HomeState = ERROR) THEN
					 q_stVGP.state := MOVESTATE_ERROR;
					  q_stVGP.pv_xHomed := FALSE;
				END_IF
				
		MOVESTATE_NEWTARGETPOSITION:
			fbMoveAxisABS.Position := rTargetPosition;	
			fbMoveAxisABS.Velocity := rTargetVelocity;		
			//fbMoveAxisABS.BufferMode := MC_BlendingNext;
			fbMoveAxisABS.Execute := TRUE;
			IF fbMoveAxisABS.Active  THEN
				(* axis is executing job but is not yet finished *)
				fbMoveAxisABS.Execute := FALSE;
				(* leave this state and buffer a second command *)
				q_stVGP.state := MOVESTATE_MOVING; 
			ElSIF fbMoveAxisABS.Done THEN
				fbMoveAxisABS.Execute := FALSE;
				q_stVGP.state := MOVESTATE_READY;
			ELSIF fbMoveAxisABS.CommandAborted OR fbMoveAxisABS.Error THEN
				q_stVGP.state := MOVESTATE_ERROR;
			END_IF
			
				
		MOVESTATE_MOVING://
			IF fbMoveAxisABS.CommandAborted OR fbMoveAxisABS.Error THEN
				q_stVGP.state := MOVESTATE_ERROR;
			END_IF	
			IF NOT ( Axis.Status.Moving) OR (fbMoveAxisABS.Done) THEN //(fbMoveAxisABS.Done) AND (fbMoveAxisABS2.Done) THEN
				q_stVGP.state := MOVESTATE_READY;	
			END_IF
			
		
		MOVESTATE_HALT:
			fbHALT.Execute :=TRUE;
			IF Axis.Status.Error THEN
				q_stVGP.state := MOVESTATE_RESET;	(* axis error requires reset *)
			ELSE
				q_stVGP.state := MOVESTATE_INIT;		(* function block errors don't need a reset *)
			END_IF
		
		MOVESTATE_ERROR :
			
			IF Axis.Status.Error THEN
				q_stVGP.state := MOVESTATE_RESET;	(* axis error requires reset *)
			ELSE
				q_stVGP.state := MOVESTATE_INIT;		(* function block errors don't need a reset *)
			END_IF

		MOVESTATE_RESET :
			fbReset.Execute := TRUE;
			IF fbReset.Done THEN
				q_stVGP.state := MOVESTATE_INIT;
			ELSIF fbReset.Error THEN
				q_stVGP.state := MOVESTATE_ERROR; (* keep trying to reset*)
			END_IF
			
		MOVESTATE_ABORT:
			fbMoveAxisABS.Execute := FALSE;
			fbMoveAxisABS2.Execute := FALSE;
			fbReset.Execute := FALSE;
			(* save target position*)
			rOldTargetPosition := 	q_stVGP.i_iPosition;
			fbHALT.Execute :=FALSE;
			fbPowerAxis.Enable := FALSE;
			fbPowerAxis.Enable_Positive := FALSE;
			fbPowerAxis.Enable_Negative := FALSE;
			q_stVGP.state := MOVESTATE_ENABLE; // Check homing first

	END_CASE





	
/// Motion Function Blocks
(* AXIS POWER*)
fbPowerAxis(
	Axis:= Axis, 
	Enable:= , 
	Enable_Positive:= , 
	Enable_Negative:= , 
	Override:= rOverride, 
	BufferMode:= , 
	Options:= , 
	Status=>  , 
	Busy=> PowerAxisOut.Busy , 
	Active=> PowerAxisOut.Active , 
	Error=> PowerAxisOut.Error, 
	ErrorID=> PowerAxisOut.ErrorID);
(* AXIS MOVE ABSOLUTE*)
fbMoveAxisABS(
	Axis:= Axis , 
	Execute:= , 
	Position:= , 
	Velocity:= , 
	Acceleration:= , 
	Deceleration:= , 
	Jerk:= , 
	BufferMode:= MC_BlendingNext , 
	Options:= , 
	Done=>MoveAbsoluteOut.Done, 
	Busy=> MoveAbsoluteOut.Busy, 
	Active=> MoveAbsoluteOut.Active, 
	CommandAborted=> MoveAbsoluteOut.CommandAborted , 
	Error=> MoveAbsoluteOut.Error, 
	ErrorID=> MoveAbsoluteOut.ErrorID);
	(* AXIS MOVE ABSOLUTE*)
fbMoveAxisABS2(
	Axis:= Axis , 
	Execute:= , 
	Position:= , 
	Velocity:= , 
	Acceleration:= , 
	Deceleration:= , 
	Jerk:= , 
	BufferMode:= MC_BlendingNext , 
	Options:= , 
	Done=>MoveAbsoluteOut2.Done, 
	Busy=> MoveAbsoluteOut2.Busy, 
	Active=> MoveAbsoluteOut2.Active, 
	CommandAborted=> MoveAbsoluteOut2.CommandAborted , 
	Error=> MoveAbsoluteOut2.Error, 
	ErrorID=> MoveAbsoluteOut2.ErrorID);
(*AXIS RESET*)
fbReset(
	Axis:= Axis, 
	Execute:= , 
	Done=>ResetOut.Done , 
	Busy=>ResetOut.Busy , 
	Error=> ResetOut.Error, 
	ErrorID=> ResetOut.ErrorID);
(*HALT*)
fbHalt(
	Axis:= Axis, 
	Execute:= , 
	Deceleration:= , 
	Jerk:= , 
	BufferMode:= MC_BlendingNext , 
	Options:= , 
	Done=> , 
	Busy=> , 
	Active=> , 
	CommandAborted=> , 
	Error=> , 
	ErrorID=> );
	

/// ERROR
IF Axis.Status.Error THEN
	q_stVGP.state := MOVESTATE_ERROR;	
END_IF;	
	
// Error Handling
if( fbPowerAxis.Error and fbPowerAxis.Active ) then 
	bError:= fbPowerAxis.Error;
	nErrorID:= fbPowerAxis.ErrorID;
END_IF
if( fbMoveAxisABS.Error and fbMoveAxisABS.Active ) then 
	bError:= fbMoveAxisABS.Error;
	nErrorID:= fbMoveAxisABS.ErrorID;
END_IF

(*Convert nErrorID to string*)
sErrorMessage:=WORD_TO_HEXSTR(in:=TO_WORD(nErrorID) , iPrecision:= 4, bLoCase:=0 );
```

### FB_VGP.ACT_HOME: ST

```vhdl
CASE HomeState OF
	READY:
		fbSetPosition.Execute := FALSE;
		fbWriteParameter.Execute := FALSE;
		fbMoveRel.Execute := FALSE;
		
	INIT:
		// disable soft limits in order to be able to move the drive
		fbWriteParameter.ParameterNumber := MC_AxisParameter.EnableLimitNeg;//EnableLimitPos;// .EnableLimitNeg;
		fbWriteParameter.Value := FALSE;
		fbWriteParameter.Execute := TRUE;
		if (fbWriteParameter.Done) THEN
			fbWriteParameter.Execute := FALSE;
			HomeState:= MOVING; 
		END_IF

	MOVING:
		IF fbMoveRel.Done THEN
			fbMoveRel.Execute := TRUE;
		END_IF;
		IF fbMoveRel.Active  THEN
			(* axis is executing job but is not yet finished *)
			fbMoveRel.Execute := FALSE;
			HomeState := MOVING2;
		ElSIF fbMoveRel.Done THEN
			fbMoveRel.Execute := FALSE;
			HomeState := MOVING2;
		ELSIF fbMoveRel.CommandAborted OR fbMoveRel.Error THEN
			fbMoveRel.Execute := FALSE;
			HomeState := ERROR;
		END_IF
	
	MOVING2:
		IF fbMoveRel.Done THEN
			fbMoveRel.Execute := TRUE;
		END_IF;
		IF fbMoveRel.Active  THEN
			(* axis is executing job but is not yet finished *)
			fbMoveRel.Execute := FALSE;
			HomeState := MOVING;
		ElSIF fbMoveRel.Done THEN
			fbMoveRel.Execute := FALSE;
			HomeState := MOVING;
		ELSIF fbMoveRel.CommandAborted OR fbMoveRel.Error THEN
			fbMoveRel.Execute := FALSE;
			HomeState := CHECK;
		END_IF	

	
	CHECK:
		//Check position lag monitoring error
		if ( Axis.Status.ErrorID = 17245)THEN 
			// Set Current Position
			fbSetPosition.Position := 0; //rOpenPosition+rHomingDistance;
			fbSetPosition.Execute := TRUE;
			if ( fbSetPosition.Done ) THEN
				fbSetPosition.Execute := FALSE;
				HomeState:= WRITE;
			END_IF
		ELSE
			HomeState := ERROR;
		END_IF
	
	ERROR:
	
	
	WRITE:
	// Re Enable the Soft limits	
		fbWriteParameter.ParameterNumber := MC_AxisParameter.AxisEnMinSoftPosLimit;//AxisEnMaxSoftPosLimit;// .AxisEnMinSoftPosLimit;
		fbWriteParameter.Value := TRUE;
		fbWriteParameter.Execute := TRUE;
		if (fbWriteParameter.Done) THEN
			fbWriteParameter.Execute := FALSE;
			HomeState:= DONE; 
		END_IF
	
	DONE:
	// Homing DONE STATE 
	// should go back to closed zero position???

END_CASE

// Move Forward
fbMoveRel(
	Axis:= Axis , 
	Execute:= , 
	Distance:= rHomingDistance , 
	Velocity:= rHomingVelocity, 
	Acceleration:= , 
	Deceleration:= , 
	Jerk:= , 
	BufferMode:= MC_BlendingNext, 
	Options:= , 
	Done=> , 
	Busy=> , 
	Active=> , 
	CommandAborted=> , 
	Error=> , 
	ErrorID=> );
	
// Set Encoder Position
fbSetPosition(
	Axis:= Axis , 
	Execute:= , 
	Position:= 0 , 
	Mode:= , 
	Options:= , 
	Done=> , 
	Busy=> , 
	Error=> , 
	ErrorID=> );
	
// Write Parameters
fbWriteParameter(
	Axis:= Axis , 
	Execute:= , 
	ParameterNumber:= , 
	Value:= , 
	Done=> , 
	Busy=> , 
	Error=> , 
	ErrorID=> );
```

### FB_VGP.ACT_INIT: ST

```vhdl
IF bInit THEN
	
(*
	(* init array with the interpolation points  *)
	(* 	fIn					 |		fOut		*)
	arrTable[1,1] := 0;			arrTable[1,2] := 0;
	arrTable[2,1] := 5;		    arrTable[2,2] := 135;
	arrTable[3,1] := 10;		arrTable[3,2] := 245;
	arrTable[4,1] :=  20;	    arrTable[4,2] := 405;
	arrTable[5,1] :=  30;	    arrTable[5,2] := 535;
	arrTable[6,1] := 40;		arrTable[6,2] := 689;
	arrTable[7,1] := 50;		arrTable[7,2] := 830;
	arrTable[8,1] := 60;	    arrTable[8,2] := 960;
	arrTable[9,1] := 70;	    arrTable[9,2] := 1095;
	arrTable[10,1] := 80;		arrTable[10,2] := 1225;
	arrTable[11,1] := 90;		arrTable[11,2] := 1415;
	arrTable[12,1] := 95;		arrTable[12,2] := 1495;
	arrTable[13,1] := 98;		arrTable[13,2] := 1559;
	arrTable[14,1] := 100;		arrTable[14,2] := 1645;
	*)
	
	(* init parameter struct *)
	stCTRL_LIN_INTERPOLATION_PARAMS.tCtrlCycleTime					:= T#10ms;
	stCTRL_LIN_INTERPOLATION_PARAMS.tTaskCycleTime					:= T#10ms;
	stCTRL_LIN_INTERPOLATION_PARAMS.nDataTable_NumberOfRows		:= INT_TO_UINT(14);

	(* set the addresses *)
	stCTRL_LIN_INTERPOLATION_PARAMS.pDataTable_ADR			:= ADR(arrTable);
	stCTRL_LIN_INTERPOLATION_PARAMS.nDataTable_SIZEOF		:= SIZEOF(arrTable);

	(* set the mode to ACTIVE --> normal operation *)
	eMode							:= eCTRL_MODE_ACTIVE;
	
	
	(* init array with the interpolation points  *)
	(* 	fIn					 |		fOut		*)
	 FOR iCounter:=1 TO 14 BY 1 DO
		arrTable_ENC[iCounter,1] := arrTable[iCounter,2];
		arrTable_ENC[iCounter,2] := arrTable[iCounter,1];		
	 END_FOR;
	(*
	arrTable_ENC[1,1] := 0;			arrTable_ENC[1,2] := 0;
	arrTable_ENC[2,1] := 135;		    arrTable_ENC[2,2] := 5;
	arrTable_ENC[3,1] := 245;		arrTable_ENC[3,2] := 10;
	arrTable_ENC[4,1] :=  405;	    arrTable_ENC[4,2] := 20;
	arrTable_ENC[5,1] :=  535;	    arrTable_ENC[5,2] := 30;
	arrTable_ENC[6,1] := 689;		arrTable_ENC[6,2] := 40;
	arrTable_ENC[7,1] := 830;		arrTable_ENC[7,2] := 50;
	arrTable_ENC[8,1] := 960;	    arrTable_ENC[8,2] := 60;
	arrTable_ENC[9,1] := 1095;	    arrTable_ENC[9,2] := 70;
	arrTable_ENC[10,1] := 1225;		arrTable_ENC[10,2] := 80;
	arrTable_ENC[11,1] := 1415;		arrTable_ENC[11,2] := 90;
	arrTable_ENC[12,1] := 1495;		arrTable_ENC[12,2] := 95;
	arrTable_ENC[13,1] := 1559;		arrTable_ENC[13,2] := 98;
	arrTable_ENC[14,1] := 1645;		arrTable_ENC[14,2] := 100;*)
	
	
	(* init parameter struct *)
	stCTRL_LIN_INTERPOLATION_PARAMS_ENC.tCtrlCycleTime					:= T#10ms;
	stCTRL_LIN_INTERPOLATION_PARAMS_ENC.tTaskCycleTime					:= T#10ms;
	stCTRL_LIN_INTERPOLATION_PARAMS_ENC.nDataTable_NumberOfRows		:= INT_TO_UINT(14);

	(* set the addresses *)
	stCTRL_LIN_INTERPOLATION_PARAMS_ENC.pDataTable_ADR			:= ADR(arrTable_ENC);
	stCTRL_LIN_INTERPOLATION_PARAMS_ENC.nDataTable_SIZEOF		:= SIZEOF(arrTable_ENC);
	
	(* reset the init flag *)
	bInit							:= FALSE;
	
END_IF;
```

### FB_VGP.ACT_LIN_INTERPOLATION: ST

```vhdl
fbCTRL_LIN_INTERPOLATION(
	fIn:= q_stVGP.rReqPosition , 
	fManValue:= 0, 
	bExtrapolate:= , 
	eMode:= eMode, 
	fOut=> , 
	bInIsGreaterThanMaxElement=> , 
	bInIsLessThanMinElement=> , 
	eState=> , 
	eErrorId=> , 
	bError=> , 
	stParams:= stCTRL_LIN_INTERPOLATION_PARAMS );
	
// Target position Calculation
rTargetPosition := LREAL_TO_REAL(fbCTRL_LIN_INTERPOLATION.fOut);
//rTargetPosition := LIMIT(rClosePosition, rTargetPosition, rOpenPosition);	
	
fbCTRL_LIN_INTERPOLATION_ENC(
	fIn:= Axis.NcToPlc.ActPos , 
	fManValue:= 0, 
	bExtrapolate:= , 
	eMode:= eMode, 
	fOut=>  , 
	bInIsGreaterThanMaxElement=> , 
	bInIsLessThanMinElement=> , 
	eState=> , 
	eErrorId=> , 
	bError=> , 
	stParams:= stCTRL_LIN_INTERPOLATION_PARAMS_ENC );
q_stVGP.i_iPosition := LREAL_TO_REAL(fbCTRL_LIN_INTERPOLATION_ENC.fOut);
```

### FB_VGP.ConfigEncoder: Declaration

```vhdl
METHOD ConfigEncoder : BOOL
VAR_INPUT
	EncoderMax: REAl; // Maximum encoder reading from fully closed to fully open
	invert: Bool; // Invert Encoder Counting Direction
END_VAR
VAR
	fbWriteParameter1: MC_WriteBoolParameter;
END_VAR
```

### FB_VGP.ConfigEncoder: ST

```vhdl
rOpenPosition := EncoderMax;

// fEncScaleFactor  -  AxisEncoderScalingFactor
 
// bEncIsInverse  -              
if (invert) THEN
	fbWriteParameter1.ParameterNumber :=  MC_AxisParameter.AxisEncoderDirectionInverse;
	fbWriteParameter1.Value := True;
END_IF

// Write Parameters
fbWriteParameter1(
	Axis:= Axis , 
	Execute:= , 
	ParameterNumber:= , 
	Value:= , 
	Done=> , 
	Busy=> , 
	Error=> , 
	ErrorID=> );
```

### FB_VGP.M_INIT: Declaration

```vhdl
METHOD M_INIT : BOOL
VAR_INPUT
	arrTable	: ARRAY[1..14,1..2] OF FLOAT;
	arrTable_ENC : ARRAY[1..14,1..2] OF FLOAT;
END_VAR
```

### FB_VGP.M_INIT: ST

```vhdl
(* init array with the interpolation points  *)
	(* 	fIn					 |		fOut		*)
	arrTable[1,1] := 0;			arrTable[1,2] := 0;
	arrTable[2,1] := 5;		    arrTable[2,2] := 135;
	arrTable[3,1] := 10;		arrTable[3,2] := 245;
	arrTable[4,1] :=  20;	    arrTable[4,2] := 405;
	arrTable[5,1] :=  30;	    arrTable[5,2] := 535;
	arrTable[6,1] := 40;		arrTable[6,2] := 689;
	arrTable[7,1] := 50;		arrTable[7,2] := 830;
	arrTable[8,1] := 60;	    arrTable[8,2] := 960;
	arrTable[9,1] := 70;	    arrTable[9,2] := 1095;
	arrTable[10,1] := 80;		arrTable[10,2] := 1225;
	arrTable[11,1] := 90;		arrTable[11,2] := 1415;
	arrTable[12,1] := 95;		arrTable[12,2] := 1495;
	arrTable[13,1] := 98;		arrTable[13,2] := 1559;
	arrTable[14,1] := 100;		arrTable[14,2] := 1645;
	
	
	(* init parameter struct *)
	stCTRL_LIN_INTERPOLATION_PARAMS.tCtrlCycleTime					:= T#10ms;
	stCTRL_LIN_INTERPOLATION_PARAMS.tTaskCycleTime					:= T#10ms;
	stCTRL_LIN_INTERPOLATION_PARAMS.nDataTable_NumberOfRows		:= INT_TO_UINT(14);

	(* set the addresses *)
	stCTRL_LIN_INTERPOLATION_PARAMS.pDataTable_ADR			:= ADR(arrTable);
	stCTRL_LIN_INTERPOLATION_PARAMS.nDataTable_SIZEOF		:= SIZEOF(arrTable);

	(* set the mode to ACTIVE --> normal operation *)
	eMode							:= eCTRL_MODE_ACTIVE;
	
	
	(* init array with the interpolation points  *)
	(* 	fIn					 |		fOut		*)
	arrTable_ENC[1,1] := 0;			arrTable_ENC[1,2] := 0;
	arrTable_ENC[2,1] := 135;		    arrTable_ENC[2,2] := 5;
	arrTable_ENC[3,1] := 245;		arrTable_ENC[3,2] := 10;
	arrTable_ENC[4,1] :=  405;	    arrTable_ENC[4,2] := 20;
	arrTable_ENC[5,1] :=  535;	    arrTable_ENC[5,2] := 30;
	arrTable_ENC[6,1] := 689;		arrTable_ENC[6,2] := 40;
	arrTable_ENC[7,1] := 830;		arrTable_ENC[7,2] := 50;
	arrTable_ENC[8,1] := 960;	    arrTable_ENC[8,2] := 60;
	arrTable_ENC[9,1] := 1095;	    arrTable_ENC[9,2] := 70;
	arrTable_ENC[10,1] := 1225;		arrTable_ENC[10,2] := 80;
	arrTable_ENC[11,1] := 1415;		arrTable_ENC[11,2] := 90;
	arrTable_ENC[12,1] := 1495;		arrTable_ENC[12,2] := 95;
	arrTable_ENC[13,1] := 1559;		arrTable_ENC[13,2] := 98;
	arrTable_ENC[14,1] := 1645;		arrTable_ENC[14,2] := 100;
	
	
	(* init parameter struct *)
	stCTRL_LIN_INTERPOLATION_PARAMS_ENC.tCtrlCycleTime					:= T#10ms;
	stCTRL_LIN_INTERPOLATION_PARAMS_ENC.tTaskCycleTime					:= T#10ms;
	stCTRL_LIN_INTERPOLATION_PARAMS_ENC.nDataTable_NumberOfRows		:= INT_TO_UINT(14);

	(* set the addresses *)
	stCTRL_LIN_INTERPOLATION_PARAMS_ENC.pDataTable_ADR			:= ADR(arrTable_ENC);
	stCTRL_LIN_INTERPOLATION_PARAMS_ENC.nDataTable_SIZEOF		:= SIZEOF(arrTable_ENC);
```

### FB_VGP.M_ValveControl: Declaration

```vhdl
METHOD M_ValveControl : BOOL
VAR_INPUT
	state:E_VCN; // Close, Open, Pressure, Manual
END_VAR
```

### FB_VGP.M_ValveControl: ST

```vhdl
q_stVGP.eValveControl := state;
```

### FB_VGP.SetEncoderMax: Declaration

```vhdl
METHOD PUBLIC SetEncoderMax : BOOL
VAR_INPUT
	EncoderMax: REAl;
END_VAR
```

### FB_VGP.SetEncoderMax: ST

```vhdl
rOpenPosition := EncoderMax;
```


POUs/MAIN.TcPOU (TcPlcObject)
-----------------------------

### MAIN: Declaration

```vhdl
PROGRAM MAIN
VAR
END_VAR
```

### MAIN: ST

```vhdl
PRG_DIAGNOSTIC();
PRG_GMD();


(*INJ*)
PRG_INJ();
PRG_PressureControl();
//PRG_Purge();
//call orther PRG

// instaniate the RTD and HV
```


POUs/PRG_DIAGNOSTIC.TcPOU (TcPlcObject)
---------------------------------------

### PRG_DIAGNOSTIC: Declaration

```vhdl
PROGRAM PRG_DIAGNOSTIC
VAR
   fbTime : FB_LocalSystemTime := ( bEnable := TRUE, dwCycle := 1 );
   logTimer : TON := ( IN := TRUE, PT := T#1000ms );

   plcName : STRING[15];

   {attribute 'pytmc' := ' pv: simHeartbeat '}
   simHeartbeat AT %I* : UINT := 0;
   {attribute 'pytmc' := ' pv: plcHeartbeat '}
   plcHeartbeat : UDINT := 0;
   {attribute 'pytmc' := ' pv: plcInfo '}
   plcInfo : STRING[40];
   {attribute 'pytmc' := ' pv: plcLocalTime '}
   plcLocalTime : STRING[25];
   
END_VAR
```

### PRG_DIAGNOSTIC: ST

```vhdl
plcHeartbeat := plcHeartbeat + 1;
IF plcHeartbeat > 4294967000
   THEN plcHeartbeat := 0;
END_IF

// get timestamp as string every second
fbTime();
logTimer( IN := fbTime.bValid );
IF logTimer.Q THEN
   logTimer( IN := FALSE ); logTimer( IN := fbTime.bValid );
   plcLocalTime := SYSTEMTIME_TO_STRING(fbTime.systemTime);
END_IF

// make an info string
plcName := 'Prototype PLC: ';
plcInfo := CONCAT(plcName, plcLocalTime);
```


POUs/PRG_Gas_Selection.TcPOU (TcPlcObject)
------------------------------------------

### PRG_Gas_Selection: Declaration

```vhdl
PROGRAM PRG_Gas_Selection
VAR
	CurrentGas: E_GasType;
	//pragma
	SelectedGas: E_GasType;
END_VAR
```

### PRG_Gas_Selection: ST

```vhdl
(* Gas selection includes a purge and checks interlocks*)

if ( VVC_83.iq_stValve.q_xOPN_DO) then
	CurrentGas := E_GasType.Neon;
	elsif ( VVC_84.iq_stValve.q_xOPN_DO) then
		CurrentGas := E_GasType.Argon;
		elsif ( VVC_85.iq_stValve.q_xOPN_DO) then
		CurrentGas := E_GasType.Krypton;
			elsif ( VVC_86.iq_stValve.q_xOPN_DO) then
			CurrentGas := E_GasType.Xenon;
END_IF


If( CurrentGas <> SelectedGas) then
	PRG_Purge.bStartPurge_sw := true;
END_IF

if NOT(PRG_Purge.bStartPurge_sw) AND(PRG_Purge.bPurgeDone) then
	case SelectedGas of
	E_GasType.none: // all valves closed
		VVC_83.iq_stValve.pv_xOPN_SW:= false;
		VVC_84.iq_stValve.pv_xOPN_SW := false;
		VVC_85.iq_stValve.pv_xOPN_SW := false;
		VVC_86.iq_stValve.pv_xOPN_SW := false;
	E_GasType.Neon:
		VVC_83.iq_stValve.pv_xOPN_SW:= TRUE;
		VVC_84.iq_stValve.pv_xOPN_SW := false;
		VVC_85.iq_stValve.pv_xOPN_SW := false;
		VVC_86.iq_stValve.pv_xOPN_SW := false;
	E_GasType.Argon: // all valves closed
		VVC_83.iq_stValve.pv_xOPN_SW:= false;
		VVC_84.iq_stValve.pv_xOPN_SW := TRUE;
		VVC_85.iq_stValve.pv_xOPN_SW := false;
		VVC_86.iq_stValve.pv_xOPN_SW := false;	 
	E_GasType.Krypton: // all valves closed
		VVC_83.iq_stValve.pv_xOPN_SW:= false;
		VVC_84.iq_stValve.pv_xOPN_SW := false;
		VVC_85.iq_stValve.pv_xOPN_SW := TRUE;
		VVC_86.iq_stValve.pv_xOPN_SW := false;
	E_GasType.Xenon: // all valves closed
		VVC_83.iq_stValve.pv_xOPN_SW:= false;
		VVC_84.iq_stValve.pv_xOPN_SW := false;
		VVC_85.iq_stValve.pv_xOPN_SW := false;
		VVC_86.iq_stValve.pv_xOPN_SW := TRUE;
	END_CASE
END_IF


/// vcn and vgp on manual or auto??
```


POUs/PRG_GMD.TcPOU (TcPlcObject)
--------------------------------

### PRG_GMD: Declaration

```vhdl
PROGRAM PRG_GMD
VAR
	f_: INT;
	fb_EM1K0_GMD_PTM_10i_xExtILKOk: BOOL;
END_VAR
```

### PRG_GMD: ST

```vhdl
// FB_MKS317

fb_EM1K0_GMD_GPI_10(PG=>);
fb_EM1K0_GMD_GPI_40(PG=>);
fb_EM1K0_GMD_GPI_70(PG=>);

// FB_PTM_TwisTorr

fb_EM1K0_GMD_PTM_10(i_xExtILKOk := F_TurboExtILKLogic_2(
	Turbo:= fb_EM1K0_GMD_PTM_10.iq_stPtm, 
	BackingGauge:= fb_EM1K0_GMD_GPI_10.PG, 
	InletGauge:= fb_EM1K0_GMD_GCC_10.IG, 
	ScrollPump:= fb_EM1K0_GMD_PRT_40.stPump));
fb_EM1K0_GMD_PTM_20(i_xExtILKOk :=  F_TurboExtILKLogic(
	Turbo:= fb_EM1K0_GMD_PTM_20.iq_stPtm, 
	BackingGauge:= fb_EM1K0_GMD_GPI_10.PG, 
	InletGauge:= fb_EM1K0_GMD_GCC_20.IG, 
	VentValve:= fake_always_closed_vent_valve, 
	ScrollPump:= fb_EM1K0_GMD_PRT_40.stPump));
fb_EM1K0_GMD_PTM_30(i_xExtILKOk :=  F_TurboExtILKLogic(
	Turbo:= fb_EM1K0_GMD_PTM_30.iq_stPtm, 
	BackingGauge:= fb_EM1K0_GMD_GPI_10.PG, 
	InletGauge:= fb_EM1K0_GMD_GCC_30.IG, 
	VentValve:= fake_always_closed_vent_valve, 
	ScrollPump:= fb_EM1K0_GMD_PRT_40.stPump));
fb_EM1K0_GMD_PTM_40(i_xExtILKOk :=  F_TurboExtILKLogic(
	Turbo:= fb_EM1K0_GMD_PTM_40.iq_stPtm, 
	BackingGauge:= fb_EM1K0_GMD_GPI_10.PG, 
	InletGauge:= fb_EM1K0_GMD_GCC_40.IG, 
	VentValve:= fake_always_closed_vent_valve, 
	ScrollPump:= fb_EM1K0_GMD_PRT_40.stPump));
fb_EM1K0_GMD_PTM_50(i_xExtILKOk :=  F_TurboExtILKLogic(
	Turbo:= fb_EM1K0_GMD_PTM_50.iq_stPtm, 
	BackingGauge:= fb_EM1K0_GMD_GPI_10.PG, 
	InletGauge:= fb_EM1K0_GMD_GCC_50.IG, 
	VentValve:= fake_always_closed_vent_valve, 
	ScrollPump:= fb_EM1K0_GMD_PRT_40.stPump));
fb_EM1K0_GMD_PTM_60(i_xExtILKOk :=  F_TurboExtILKLogic(
	Turbo:= fb_EM1K0_GMD_PTM_60.iq_stPtm, 
	BackingGauge:= fb_EM1K0_GMD_GPI_10.PG, 
	InletGauge:= fb_EM1K0_GMD_GCC_60.IG, 
	VentValve:= fake_always_closed_vent_valve, 
	ScrollPump:= fb_EM1K0_GMD_PRT_40.stPump));
fb_EM1K0_GMD_PTM_70(i_xExtILKOk :=  F_TurboExtILKLogic(
	Turbo:= fb_EM1K0_GMD_PTM_70.iq_stPtm, 
	BackingGauge:= fb_EM1K0_GMD_GPI_10.PG, 
	InletGauge:= fb_EM1K0_GMD_GCC_70.IG, 
	VentValve:= fake_always_closed_vent_valve, 
	ScrollPump:= fb_EM1K0_GMD_PRT_40.stPump));

// FB_VRC

fb_EM1K0_GMD_VRC_10.i_xExtILK_OK :=F_TurboGateValve_ILK(i_Turbo:=fb_EM1K0_GMD_PTM_10.iq_stPtm,i_stUSG:=fb_EM1K0_GMD_GCC_10.IG);
fb_EM1K0_GMD_VRC_10( i_xOverrideMode := xSystemOverrideMode);
fb_EM1K0_GMD_VRC_20.i_xExtILK_OK :=F_TurboGateValve_ILK(i_Turbo:=fb_EM1K0_GMD_PTM_20.iq_stPtm,i_stUSG:=fb_EM1K0_GMD_GCC_20.IG);
fb_EM1K0_GMD_VRC_20( i_xOverrideMode := xSystemOverrideMode);
fb_EM1K0_GMD_VRC_30.i_xExtILK_OK :=F_TurboGateValve_ILK(i_Turbo:=fb_EM1K0_GMD_PTM_30.iq_stPtm,i_stUSG:=fb_EM1K0_GMD_GCC_30.IG);
fb_EM1K0_GMD_VRC_30( i_xOverrideMode := xSystemOverrideMode);
fb_EM1K0_GMD_VRC_50.i_xExtILK_OK :=F_TurboGateValve_ILK(i_Turbo:=fb_EM1K0_GMD_PTM_50.iq_stPtm,i_stUSG:=fb_EM1K0_GMD_GCC_50.IG);
fb_EM1K0_GMD_VRC_50( i_xOverrideMode := xSystemOverrideMode);
fb_EM1K0_GMD_VRC_60.i_xExtILK_OK :=F_TurboGateValve_ILK(i_Turbo:=fb_EM1K0_GMD_PTM_60.iq_stPtm,i_stUSG:=fb_EM1K0_GMD_GCC_60.IG);
fb_EM1K0_GMD_VRC_60( i_xOverrideMode := xSystemOverrideMode);
fb_EM1K0_GMD_VRC_70.i_xExtILK_OK :=F_TurboGateValve_ILK(i_Turbo:=fb_EM1K0_GMD_PTM_70.iq_stPtm,i_stUSG:=fb_EM1K0_GMD_GCC_70.IG);
fb_EM1K0_GMD_VRC_70( i_xOverrideMode := xSystemOverrideMode);

// FB_MKS422

fb_EM1K0_GMD_GCC_10(PG := fb_EM1K0_GMD_GPI_40.PG);
fb_EM1K0_GMD_GCC_20(PG := fb_EM1K0_GMD_GPI_40.PG);
fb_EM1K0_GMD_GCC_30(PG := fb_EM1K0_GMD_GPI_40.PG);
fb_EM1K0_GMD_GCC_40(PG := fb_EM1K0_GMD_GPI_40.PG);
fb_EM1K0_GMD_GCC_50(PG := fb_EM1K0_GMD_GPI_40.PG);
fb_EM1K0_GMD_GCC_60(PG := fb_EM1K0_GMD_GPI_40.PG);
fb_EM1K0_GMD_GCC_70(PG := fb_EM1K0_GMD_GPI_40.PG);

// FB_EbaraEVA

fb_EM1K0_GMD_PRT_40(i_xExtIlkOK := TRUE);
```


POUs/PRG_HV_ILK.TcPOU (TcPlcObject)
-----------------------------------

### PRG_HV_ILK: Declaration

```vhdl
PROGRAM PRG_HV_ILK
VAR
	HV_ILK_OK: bool := false;
END_VAR
```

### PRG_HV_ILK: ST

```vhdl
//evaluate the HV ILK_OK bit
//HV_ILK_OK := GCC_40.IG.xAT_VAC;

hv1(i_xExtIlkOK := HV_ILK_OK);
hv2(i_xExtIlkOK := HV_ILK_OK);
```


POUs/PRG_INJ.TcPOU (TcPlcObject)
--------------------------------

### PRG_INJ: Declaration

```vhdl
PROGRAM PRG_INJ
VAR
	i:INT;
	fullScale: REAL :=2000;
	DefaultSP :REAL:=0;
	rFULL_SCALE:REAL:=3000;//psig
END_VAR
```

### PRG_INJ: ST

```vhdl
// GCM
GCM_80(i_rFULL_SCALE := fullScale );
GFM_86(i_rFULL_SCALE:= rFULL_SCALE,rDefaultSP:=DefaultSP);

i:=i+1;
// Vent Valves
// interlock evaluation

VVC_80.i_xExtILK_OK := (NOT VVC_81.iq_stValve.q_xOPN_DO) AND(NOT VVC_82.iq_stValve.q_xOPN_DO); // Or we need to purge all the way up to the VCN
VVC_81.i_xExtILK_OK := (NOT VVC_83.iq_stValve.q_xOPN_DO) AND(NOT VVC_84.iq_stValve.q_xOPN_DO) AND (NOT VVC_85.iq_stValve.q_xOPN_DO) AND (NOT VVC_86.iq_stValve.q_xOPN_DO);// AND (NOT VVC_80.iq_stValve.q_xOPN_DO);
VVC_82.i_xExtILK_OK := (NOT VVC_83.iq_stValve.q_xOPN_DO) AND(NOT VVC_84.iq_stValve.q_xOPN_DO) AND (NOT VVC_85.iq_stValve.q_xOPN_DO) AND (NOT VVC_86.iq_stValve.q_xOPN_DO);// AND (NOT VVC_80.iq_stValve.q_xOPN_DO);

// instanitation
VVC_80(i_xExtILK_OK:= , i_xOverrideMode:= xOverrideMode, iq_stValve=> );
VVC_81(i_xExtILK_OK:= , i_xOverrideMode:= xOverrideMode, iq_stValve=> );
VVC_82(i_xExtILK_OK:= , i_xOverrideMode:= xOverrideMode, iq_stValve=> );



// Gas panel

// Interlock evaluation
VVC_83.i_xExtILK_OK := (NOT VVC_84.iq_stValve.q_xOPN_DO) AND (NOT VVC_85.iq_stValve.q_xOPN_DO) AND (NOT VVC_86.iq_stValve.q_xOPN_DO) AND (NOT VVC_81.iq_stValve.q_xOPN_DO) AND (NOT VVC_82.iq_stValve.q_xOPN_DO); // AND NOT bPurgeActive  
VVC_84.i_xExtILK_OK := (NOT VVC_83.iq_stValve.q_xOPN_DO) AND (NOT VVC_85.iq_stValve.q_xOPN_DO) AND (NOT VVC_86.iq_stValve.q_xOPN_DO) AND (NOT VVC_81.iq_stValve.q_xOPN_DO) AND (NOT VVC_82.iq_stValve.q_xOPN_DO); // AND NOT bPurgeActive  
VVC_85.i_xExtILK_OK := (NOT VVC_83.iq_stValve.q_xOPN_DO) AND (NOT VVC_84.iq_stValve.q_xOPN_DO) AND (NOT VVC_86.iq_stValve.q_xOPN_DO) AND (NOT VVC_81.iq_stValve.q_xOPN_DO) AND (NOT VVC_82.iq_stValve.q_xOPN_DO); // AND NOT bPurgeActive  
VVC_86.i_xExtILK_OK := (NOT VVC_83.iq_stValve.q_xOPN_DO) AND (NOT VVC_84.iq_stValve.q_xOPN_DO) AND (NOT VVC_85.iq_stValve.q_xOPN_DO) AND (NOT VVC_81.iq_stValve.q_xOPN_DO) AND (NOT VVC_82.iq_stValve.q_xOPN_DO);// AND NOT bPurgeActive 

//Gas Panel
VVC_83(i_xExtILK_OK:= , i_xOverrideMode:= xOverrideMode, iq_stValve=> );
VVC_84(i_xExtILK_OK:= , i_xOverrideMode:= xOverrideMode, iq_stValve=> );
VVC_85(i_xExtILK_OK:= , i_xOverrideMode:= xOverrideMode, iq_stValve=> );
VVC_86(i_xExtILK_OK:= , i_xOverrideMode:= xOverrideMode, iq_stValve=> );
```


POUs/PRG_PressureControl.TcPOU (TcPlcObject)
--------------------------------------------

### PRG_PressureControl: Declaration

```vhdl
PROGRAM PRG_PressureControl
VAR CONSTANT
		nDataTable_NumberOfRows : INT:=9;
END_VAR
VAR

	fSetpointValue				: FLOAT;
	fActualValue				: FLOAT;
	fCtrlOutput						: FLOAT;
	fBasicCtrlOutput						: FLOAT;
	f_Rep_POS: Float;
	
	
	



	
	fManValue											: FLOAT;
	bExtrapolate										: BOOL;
	fManSyncValue			: FLOAT;
	bSync						: BOOL;

	bHold						: BOOL;

	eMode						: E_CTRL_MODE;
	stCTRL_PI_PARAMS		: ST_CTRL_PI_PARAMS;
	stCTRL_LIN_INTERPOLATION_PARAMS		: ST_CTRL_LIN_INTERPOLATION_PARAMS;

	eErrorId					: E_CTRL_ERRORCODES;
	bError						: BOOL;
	bARWactive				: BOOL;
	
	arrTable											: ARRAY[1..nDataTable_NumberOfRows,1..2] OF FLOAT;
	(* controller  *)
	fbCTRL_PI				: FB_CTRL_PI;
	fbCTRL_Normalize 	: FB_CTRL_NORMALIZE;
	fbCTRL_LIN_INTERPOLATION					: FB_CTRL_LIN_INTERPOLATION;

	bInit						: BOOL		:= TRUE;
	BasicPID: FB_BasicPID;
END_VAR
```

### PRG_PressureControl: ST

```vhdl
//VCN
VCN_40(i_xExtIlkOK := true(*GCC_40.IG.xAT_VAC*), i_ReqPos:= );
//VGP_40(i_xExtIlkOK := true(*GCC_40.IG.xAT_VAC*), i_ReqPos:= );
f_Rep_POS := VCN_40.iq_stVCN.rReqPosition;

(*-------------------------------------------------------------------*)
(*             PI CONTROL          *)
(*-------------------------------------------------------------------*)


IF bInit
THEN
	(* init parameter struct *)
	stCTRL_PI_PARAMS.tCtrlCycleTime		:= T#10ms;
	stCTRL_PI_PARAMS.tTaskCycleTime	:= T#10ms;
	stCTRL_PI_PARAMS.tTn					:= T#0S;//T#2s;		(* derivative gain Tv					*)
	stCTRL_PI_PARAMS.fKp					:= 2;			(* proportional gain Kp				*)
	stCTRL_PI_PARAMS.fOutMaxLimit		:=  100;  			(* maximum output limit				*)
	stCTRL_PI_PARAMS.fOutMinLimit		:= 0;			(* minimum output limit				*)

	
	(* init array with the interpolation points  *)
	(* 	fIn					 |		fOut		*)
	arrTable[1,1] := 0;			arrTable[1,2] := 0;
	arrTable[2,1] := 0.001;		arrTable[1,2] := 20;
	arrTable[3,1] := 0.005;		arrTable[3,2] := 30;
	arrTable[4,1] :=  0.089;	arrTable[4,2] := 40;
	arrTable[5,1] :=  0.276;	arrTable[5,2] := 50;
	arrTable[6,1] := 2.299;		arrTable[6,2] := 60;
	arrTable[7,1] := 9.522;		arrTable[7,2] := 70;
	arrTable[8,1] := 13.815;	arrTable[8,2] := 75;
	arrTable[9,1] := 24.019;	arrTable[8,2] := 80;
	
	
	(* init parameter struct *)
	stCTRL_LIN_INTERPOLATION_PARAMS.tCtrlCycleTime					:= T#10ms;
	stCTRL_LIN_INTERPOLATION_PARAMS.tTaskCycleTime					:= T#10ms;
	stCTRL_LIN_INTERPOLATION_PARAMS.nDataTable_NumberOfRows		:= INT_TO_UINT(nDataTable_NumberOfRows);

	(* set the addresses *)
	stCTRL_LIN_INTERPOLATION_PARAMS.pDataTable_ADR			:= ADR(arrTable);
	stCTRL_LIN_INTERPOLATION_PARAMS.nDataTable_SIZEOF		:= SIZEOF(arrTable);

	
	(* set the mode to ACTIVE --> normal operation *)
	eMode							:= eCTRL_MODE_ACTIVE;
	
	(* reset the init flag *)
	bInit							:= FALSE;
END_IF


(* call controller *)
fbCTRL_PI(		fSetpointValue		:= fSetpointValue,
					fActualValue		:= fActualValue,
					fManSyncValue	:= fManSyncValue,
					bSync				:= bSync,
					eMode				:= eMode,
					bHold				:= bHold,
					stParams			:= stCTRL_PI_PARAMS,
					fOut				=> fCtrlOutput,
					bARWactive		=> bARWactive,
					eErrorId			=> eErrorId,
					bError				=> bError
				);
(* call interpolation fb *)
(*
fbCTRL_LIN_INTERPOLATION		(	fIn						:= fSetpointValue,
									fManValue				:= fManValue,
									bExtrapolate				:= bExtrapolate,
									stParams				:= stCTRL_LIN_INTERPOLATION_PARAMS,
									eMode					:= eMode,

									fOut						=> ,
									eErrorId					=> eErrorId,
									bError					=> bError
								);

fCtrlOutput := fbCTRL_PI.fOut + fbCTRL_LIN_INTERPOLATION.fOut;
*)BasicPID(
	fSetpointValue:= fSetpointValue,
	fActualValue:= fActualValue , 
	bReset:= FALSE , 
	fCtrlCycleTime:= 10, 
	fKp:= stCTRL_PI_PARAMS.fKp, 
	fTn:= 0, 
	fTv:= 0, 
	fTd:= 0, 
	fCtrlOutput=> fBasicCtrlOutput, 
	nErrorStatus=> );
```


POUs/PRG_Purge.TcPOU (TcPlcObject)
----------------------------------

### PRG_Purge: Declaration

```vhdl
PROGRAM PRG_Purge
VAR
	step: INT:=0;

//ADD PRAGMAS

	AllGasVlvCls 		: BOOL; (* All Gas Manifold Valves are closed when True, not including VIC80, 81 or VGP40 *)
	WatchdogTmr			: TON;  (* Purge Watchdog Timer*)

	StartWatchdogTmr 	: BOOL;
	WatchdogPeriod 		: TIME;

	NeedleVlvPurgeTmr	: TON;	(* Declaration for the needle valve Purge timer *)
	NeedlePurgeTime		: TIME:=T#30S;
	BurpET				: TIME;
	NeedlePurgeRun		: BOOL;
	NeedlePurgeDone		: BOOL;
	NeedlePurgeRepeat	: INT:= 2;
	VCN_Timer	:TON;
	//PRAGMA
	NeedleBurpTime		: TIME;


	//PRAGMA
	GBA80Tmr			: TON;
	GBA80Time			: TIME:=T#20S;
	GBATimeDone			: BOOL;

	CATCH : INT;
	CATCH1 : INT;
	
	// Timers
	VVC_81_Timer : TON;
	VVC_82_Timer : TON;
	
	// cOMMANDS FROM epics
	//pragma
	bStartPurge_sw : BOOL :=false;
	bPurgeActive : BOOL:=false;
	bPurgeDone : BOOL :=false;
	

END_VAR
```

### PRG_Purge: ST

```vhdl
(* 		PURGE CYCLE
	The purge cycle cosists of the following steps;	
	1. Close all gas valves 83-86
	2. Close Needle valve 
	3. Fully open VGP:40
	4. PUMP DOWN MANIFOLD: Open VIC82 for a certain peroid of time or till cetrain pressure
	5. Open VIC:81 and keep it open while the manifold pumps down to pressure set point
	6. BURP NEEDLE VALVE: Once the manifold is pumped down, open the needle valve (burp) to evacuate gases that may be trapped in its mechanism
	7. Close needle valve
	8. Close VIC:81 and VIC:82
	9. Release VGP:40

*)


CASE step OF
		0: // READY STATE
		IF (bStartPurge_sw) Then
			step:=10;
			bPurgeActive := true;
			bPurgeDone := false;
		END_IF

10: // start purge sequence by closing all gas valves
	VVC_80.M_Set_OPN_SW(FALSE);
	VVC_83.M_Set_OPN_SW(FALSE);
	VVC_84.M_Set_OPN_SW(FALSE);
	VVC_85.M_Set_OPN_SW(FALSE);
	VVC_86.M_Set_OPN_SW(FALSE);
	
	if  (NOT VVC_83.iq_stValve.q_xOPN_DO) AND(NOT VVC_84.iq_stValve.q_xOPN_DO) AND (NOT VVC_85.iq_stValve.q_xOPN_DO) AND (NOT VVC_86.iq_stValve.q_xOPN_DO) then
		step:= 20;
	END_IF
	
20: //Close Needle valve 
	VCN_40.M_ValveControl( E_VCN.CloseValve);
	// wait for a period of time to ensure that the Valve is fully closed
	IF (VCN_Timer.Q) THEN
		step:=30;
	END_IF
	
	
30: //Fully open VGP:40
	VGP_40.M_ValveControl(E_VCN.OpenValve);
	IF NOT(VGP_40.q_stVGP.state = E_MoveState.MOVESTATE_READY ) THEN // wait until the VGP encoder reads Open
		step:=31;
	END_IF
	if (VGP_40.q_stVGP.pv_xError )then
		step:=900+step;
	END_IF
31: 
	IF (VGP_40.q_stVGP.state = E_MoveState.MOVESTATE_READY ) THEN // wait until the VGP encoder reads Open //use motion ready
		step:=40;
	END_IF
	if (VGP_40.q_stVGP.pv_xError )then
		step:=900+step;
	END_IF
	
40: // open vavle 80 to pump down all the way to the needle valve
	VVC_80.M_Set_OPN_SW(TRUE);
	if (VVC_80.iq_stValve.q_xOPN_DO ) THEN
		step:=41;
	END_IF
	
41: //PUMP DOWN MANIFOLD: Open VIC82 for a certain peroid of time or till cetrain pressure
	VVC_82.iq_stValve.pv_xOPN_SW := TRUE;
	if (VVC_82.iq_stValve.q_xOPN_DO ) AND (VVC_82_Timer.Q) THEN
		step:=50;
	END_IF

50:// Open VIC:81 and keep it open while the manifold pumps down to pressure set point
	VVC_81.M_Set_OPN_SW(TRUE);
	IF (VVC_81.iq_stValve.q_xOPN_DO ) AND (VVC_81_Timer.Q) THEN // or a certain pressure reading and check timeouts
		step:=51;
	END_IF
	
51: //Close VIC:81 and VIC:82
	VVC_80.M_Set_OPN_SW(false);
	VVC_81.M_Set_OPN_SW(false);
	VVC_82.M_Set_OPN_SW(false);
	IF (NOT VVC_80.iq_stValve.q_xOPN_DO) AND(NOT VVC_81.iq_stValve.q_xOPN_DO) AND(NOT VVC_82.iq_stValve.q_xOPN_DO) THEN
		step:=60;
	END_IF

60: //BURP NEEDLE VALVE: Once the manifold is pumped down, open the needle valve (burp) to evacuate gases that may be trapped in its mechanism
	VCN_40.M_ValveControl(E_VCN.OpenValve);
	// wait for a period of time to ensure that the Valve is fully closed
	IF (VCN_Timer.Q) THEN
		step:=70;
	END_IF
	
70: //Close Needle valve 
	VCN_40.M_ValveControl(E_VCN.CloseValve);
	// wait for a period of time to ensure that the Valve is fully closed
	IF (VCN_Timer.Q) THEN
		step:=80;
	END_IF

80: // Repeat
	IF (NeedlePurgeRepeat > 0) THEN
		NeedlePurgeRepeat := NeedlePurgeRepeat-1;
		step:= 60;
	ELSE
		NeedlePurgeRepeat := 2;
		step:=90;				
	END_IF
	
	



90: //Release VGP:40
	VGP_40.M_ValveControl( E_VCN.ManualControl);
	VGP_40.q_stVGP.rReqPosition:= 50; //50% open
	IF NOT(VGP_40.q_stVGP.state = E_MoveState.MOVESTATE_READY ) THEN // wait until the VGP encoder reads Open //use motion ready
		step:=91;
	END_IF
	if (VGP_40.q_stVGP.pv_xError )then
		step:=900+step;
	END_IF
	
91: 
	IF (VGP_40.q_stVGP.state = E_MoveState.MOVESTATE_READY ) THEN // wait until the VGP encoder reads Open //use motion ready
		step:=100;
	END_IF
	if (VGP_40.q_stVGP.pv_xError )then
		step:=900+step;
	END_IF
  
100: // DONE
	bStartPurge_sw := false;
	bPurgeActive := false;
	bPurgeDone := TRUE;
	
900: //Error
	VVC_80.M_Set_OPN_SW(false);
	VVC_81.M_Set_OPN_SW(false);
	VVC_82.M_Set_OPN_SW(false);
	VVC_83.M_Set_OPN_SW(false);
	VVC_84.M_Set_OPN_SW(false);
	VVC_85.M_Set_OPN_SW(false);
	VVC_86.M_Set_OPN_SW(false);
	VCN_40.M_ValveControl(E_VCN.CloseValve);
	//VGP_40.M_ValveControl(E_VCN.CloseValve); // CLOSE or OPEN to pump down


END_CASE


//shouldn't be here
(*
if (bPurgeActive) then
	VVC_83.i_xExtILK_OK := VVC_84.i_xExtILK_OK := VVC_85.i_xExtILK_OK := VVC_86.i_xExtILK_OK := false;
END_IF
*)

//Errors
if (step >900 ) Then
	// show error and step
END_IF


//Timers
VVC_81_Timer(IN:= (step = 50), PT:=t#60s);
VVC_82_Timer(IN:= (step = 40), PT:=T#360S);
VCN_Timer(IN:= (step = 20) OR (step = 60) OR (step = 70), PT:=T#60S);


/// vcn and vgp on manual or auto?? manual, until the Go or auto button is pressed??
```


POUs/PRG_VGP.TcPOU (TcPlcObject)
--------------------------------

### PRG_VGP: Declaration

```vhdl
PROGRAM PRG_VGP
VAR
	arrTable											: ARRAY[1..14,1..2] OF FLOAT;
	arrTable_ENC										: ARRAY[1..14,1..2] OF FLOAT;
	
	bInit: BOOL:=true;
	
	VGP_REQ_POS: LREAL;
	VGP_OUT_POS:LREAL;
END_VAR
```

### PRG_VGP: ST

```vhdl
IF bInit
THEN
	
	
	(* init array with the interpolation points  *)
	(* 	fIn					 |		fOut		*)
	arrTable[1,1] := 0;			arrTable[1,2] := 0;
	arrTable[2,1] := 5;		    arrTable[2,2] := 135;
	arrTable[3,1] := 10;		arrTable[3,2] := 245;
	arrTable[4,1] :=  20;	    arrTable[4,2] := 405;
	arrTable[5,1] :=  30;	    arrTable[5,2] := 535;
	arrTable[6,1] := 40;		arrTable[6,2] := 689;
	arrTable[7,1] := 50;		arrTable[7,2] := 830;
	arrTable[8,1] := 60;	    arrTable[8,2] := 960;
	arrTable[9,1] := 70;	    arrTable[9,2] := 1095;
	arrTable[10,1] := 80;		arrTable[10,2] := 1225;
	arrTable[11,1] := 90;		arrTable[11,2] := 1415;
	arrTable[12,1] := 95;		arrTable[12,2] := 1495;
	arrTable[13,1] := 98;		arrTable[13,2] := 1559;
	arrTable[14,1] := 100;		arrTable[14,2] := 1645;
	
	
	(* reset the init flag *)
	bInit							:= FALSE;
END_IF

 
VGP_40(
	i_xExtIlkOK:= true(*GPI_50.IG.xAT_VAC*), 
	i_ReqPos:= , 
	arrTable:= arrTable , 
	(*arrTable_ENC:= arrTable_ENC , *)
	q_stVGP=> );
```


Symbols
-------

    .TCPADS_MAXUDP_BUFFSIZE : UDINT (4232384 32)
    Constants.CompilerVersion : VERSION (4604512 64)
    Constants.CompilerVersionNumeric : DWORD (4604608 32)
    Constants.RuntimeVersion : VERSION (4604448 64)
    Constants.RuntimeVersionNumeric : DWORD (4604576 32)
    Constants.bFPUSupport : BOOL (4582696 8)
    Constants.bLittleEndian : BOOL (4500784 8)
    Constants.bSimulationMode : BOOL (4500792 8)
    Constants.gc_GaugeValidState : INT (4232416 16)
    Constants.gc_iSizeOfGGOArray : INT (4204752 16)
    Constants.nPackMode : UINT (4509936 16)
    Constants.nRegisterSize : WORD (4509920 16)
    DefaultGlobals.fTimeStamp : LREAL (4096128 64)
    DefaultGlobals.stSys : LCLS_General.ST_System (4096000 88)
    GVL.nLangId_OnlineMonitoring : DINT (4243328 32)
    GVL_GMD.fake_always_closed_vent_valve : L2SI_Vacuum_Library.ST_VVC (4582656 40)
    GVL_GMD.fb_EM1K0_GMD_GCC_10 : L2SI_Vacuum_Library.FB_MKS422 (4596160 1152)
    GVL_GMD.fb_EM1K0_GMD_GCC_10.i_iPRESS_R : INT (4597280 16)
    GVL_GMD.fb_EM1K0_GMD_GCC_10.q_xHV_DIS : BOOL (4597296 8)
    GVL_GMD.fb_EM1K0_GMD_GCC_20 : L2SI_Vacuum_Library.FB_MKS422 (4597312 1152)
    GVL_GMD.fb_EM1K0_GMD_GCC_20.i_iPRESS_R : INT (4598432 16)
    GVL_GMD.fb_EM1K0_GMD_GCC_20.q_xHV_DIS : BOOL (4598448 8)
    GVL_GMD.fb_EM1K0_GMD_GCC_30 : L2SI_Vacuum_Library.FB_MKS422 (4598464 1152)
    GVL_GMD.fb_EM1K0_GMD_GCC_30.i_iPRESS_R : INT (4599584 16)
    GVL_GMD.fb_EM1K0_GMD_GCC_30.q_xHV_DIS : BOOL (4599600 8)
    GVL_GMD.fb_EM1K0_GMD_GCC_40 : L2SI_Vacuum_Library.FB_MKS422 (4599616 1152)
    GVL_GMD.fb_EM1K0_GMD_GCC_40.i_iPRESS_R : INT (4600736 16)
    GVL_GMD.fb_EM1K0_GMD_GCC_40.q_xHV_DIS : BOOL (4600752 8)
    GVL_GMD.fb_EM1K0_GMD_GCC_50 : L2SI_Vacuum_Library.FB_MKS422 (4600768 1152)
    GVL_GMD.fb_EM1K0_GMD_GCC_50.i_iPRESS_R : INT (4601888 16)
    GVL_GMD.fb_EM1K0_GMD_GCC_50.q_xHV_DIS : BOOL (4601904 8)
    GVL_GMD.fb_EM1K0_GMD_GCC_60 : L2SI_Vacuum_Library.FB_MKS422 (4601920 1152)
    GVL_GMD.fb_EM1K0_GMD_GCC_60.i_iPRESS_R : INT (4603040 16)
    GVL_GMD.fb_EM1K0_GMD_GCC_60.q_xHV_DIS : BOOL (4603056 8)
    GVL_GMD.fb_EM1K0_GMD_GCC_70 : L2SI_Vacuum_Library.FB_MKS422 (4603072 1152)
    GVL_GMD.fb_EM1K0_GMD_GCC_70.i_iPRESS_R : INT (4604192 16)
    GVL_GMD.fb_EM1K0_GMD_GCC_70.q_xHV_DIS : BOOL (4604208 8)
    GVL_GMD.fb_EM1K0_GMD_GPI_10 : L2SI_Vacuum_Library.FB_MKS317 (4582720 704)
    GVL_GMD.fb_EM1K0_GMD_GPI_10.i_iPRESS_R : INT (4583392 16)
    GVL_GMD.fb_EM1K0_GMD_GPI_40 : L2SI_Vacuum_Library.FB_MKS317 (4583424 704)
    GVL_GMD.fb_EM1K0_GMD_GPI_40.i_iPRESS_R : INT (4584096 16)
    GVL_GMD.fb_EM1K0_GMD_GPI_70 : L2SI_Vacuum_Library.FB_MKS317 (4584128 704)
    GVL_GMD.fb_EM1K0_GMD_GPI_70.i_iPRESS_R : INT (4584800 16)
    GVL_GMD.fb_EM1K0_GMD_PRT_40 : L2SI_Vacuum_Library.FB_EbaraEVA (4604224 224)
    GVL_GMD.fb_EM1K0_GMD_PRT_40.i_xAlarmOK : BOOL (4604424 8)
    GVL_GMD.fb_EM1K0_GMD_PRT_40.i_xIsRun : BOOL (4604432 8)
    GVL_GMD.fb_EM1K0_GMD_PRT_40.q_xRemote : BOOL (4604408 8)
    GVL_GMD.fb_EM1K0_GMD_PRT_40.q_xResetAlarm : BOOL (4604416 8)
    GVL_GMD.fb_EM1K0_GMD_PRT_40.q_xRunDo : BOOL (4604400 8)
    GVL_GMD.fb_EM1K0_GMD_PTM_10 : L2SI_Vacuum_Library.FB_PTM_TwisTorr (4584832 384)
    GVL_GMD.fb_EM1K0_GMD_PTM_10.i_xAtSpd : BOOL (4585192 8)
    GVL_GMD.fb_EM1K0_GMD_PTM_10.i_xFault : BOOL (4585200 8)
    GVL_GMD.fb_EM1K0_GMD_PTM_10.q_RunDO : BOOL (4585208 8)
    GVL_GMD.fb_EM1K0_GMD_PTM_20 : L2SI_Vacuum_Library.FB_PTM_TwisTorr (4585216 384)
    GVL_GMD.fb_EM1K0_GMD_PTM_20.i_xAtSpd : BOOL (4585576 8)
    GVL_GMD.fb_EM1K0_GMD_PTM_20.i_xFault : BOOL (4585584 8)
    GVL_GMD.fb_EM1K0_GMD_PTM_20.q_RunDO : BOOL (4585592 8)
    GVL_GMD.fb_EM1K0_GMD_PTM_30 : L2SI_Vacuum_Library.FB_PTM_TwisTorr (4585600 384)
    GVL_GMD.fb_EM1K0_GMD_PTM_30.i_xAtSpd : BOOL (4585960 8)
    GVL_GMD.fb_EM1K0_GMD_PTM_30.i_xFault : BOOL (4585968 8)
    GVL_GMD.fb_EM1K0_GMD_PTM_30.q_RunDO : BOOL (4585976 8)
    GVL_GMD.fb_EM1K0_GMD_PTM_40 : L2SI_Vacuum_Library.FB_PTM_TwisTorr (4585984 384)
    GVL_GMD.fb_EM1K0_GMD_PTM_40.i_xAtSpd : BOOL (4586344 8)
    GVL_GMD.fb_EM1K0_GMD_PTM_40.i_xFault : BOOL (4586352 8)
    GVL_GMD.fb_EM1K0_GMD_PTM_40.q_RunDO : BOOL (4586360 8)
    GVL_GMD.fb_EM1K0_GMD_PTM_50 : L2SI_Vacuum_Library.FB_PTM_TwisTorr (4586368 384)
    GVL_GMD.fb_EM1K0_GMD_PTM_50.i_xAtSpd : BOOL (4586728 8)
    GVL_GMD.fb_EM1K0_GMD_PTM_50.i_xFault : BOOL (4586736 8)
    GVL_GMD.fb_EM1K0_GMD_PTM_50.q_RunDO : BOOL (4586744 8)
    GVL_GMD.fb_EM1K0_GMD_PTM_60 : L2SI_Vacuum_Library.FB_PTM_TwisTorr (4586752 384)
    GVL_GMD.fb_EM1K0_GMD_PTM_60.i_xAtSpd : BOOL (4587112 8)
    GVL_GMD.fb_EM1K0_GMD_PTM_60.i_xFault : BOOL (4587120 8)
    GVL_GMD.fb_EM1K0_GMD_PTM_60.q_RunDO : BOOL (4587128 8)
    GVL_GMD.fb_EM1K0_GMD_PTM_70 : L2SI_Vacuum_Library.FB_PTM_TwisTorr (4587136 384)
    GVL_GMD.fb_EM1K0_GMD_PTM_70.i_xAtSpd : BOOL (4587496 8)
    GVL_GMD.fb_EM1K0_GMD_PTM_70.i_xFault : BOOL (4587504 8)
    GVL_GMD.fb_EM1K0_GMD_PTM_70.q_RunDO : BOOL (4587512 8)
    GVL_GMD.fb_EM1K0_GMD_VRC_10 : L2SI_Vacuum_Library.FB_VRC (4587520 1440)
    GVL_GMD.fb_EM1K0_GMD_VRC_10.i_xClsLS : BOOL (4588936 8)
    GVL_GMD.fb_EM1K0_GMD_VRC_10.i_xOpnLS : BOOL (4588928 8)
    GVL_GMD.fb_EM1K0_GMD_VRC_10.q_xOPN_DO : BOOL (4588944 8)
    GVL_GMD.fb_EM1K0_GMD_VRC_20 : L2SI_Vacuum_Library.FB_VRC (4588960 1440)
    GVL_GMD.fb_EM1K0_GMD_VRC_20.i_xClsLS : BOOL (4590376 8)
    GVL_GMD.fb_EM1K0_GMD_VRC_20.i_xOpnLS : BOOL (4590368 8)
    GVL_GMD.fb_EM1K0_GMD_VRC_20.q_xOPN_DO : BOOL (4590384 8)
    GVL_GMD.fb_EM1K0_GMD_VRC_30 : L2SI_Vacuum_Library.FB_VRC (4590400 1440)
    GVL_GMD.fb_EM1K0_GMD_VRC_30.i_xClsLS : BOOL (4591816 8)
    GVL_GMD.fb_EM1K0_GMD_VRC_30.i_xOpnLS : BOOL (4591808 8)
    GVL_GMD.fb_EM1K0_GMD_VRC_30.q_xOPN_DO : BOOL (4591824 8)
    GVL_GMD.fb_EM1K0_GMD_VRC_50 : L2SI_Vacuum_Library.FB_VRC (4591840 1440)
    GVL_GMD.fb_EM1K0_GMD_VRC_50.i_xClsLS : BOOL (4593256 8)
    GVL_GMD.fb_EM1K0_GMD_VRC_50.i_xOpnLS : BOOL (4593248 8)
    GVL_GMD.fb_EM1K0_GMD_VRC_50.q_xOPN_DO : BOOL (4593264 8)
    GVL_GMD.fb_EM1K0_GMD_VRC_60 : L2SI_Vacuum_Library.FB_VRC (4593280 1440)
    GVL_GMD.fb_EM1K0_GMD_VRC_60.i_xClsLS : BOOL (4594696 8)
    GVL_GMD.fb_EM1K0_GMD_VRC_60.i_xOpnLS : BOOL (4594688 8)
    GVL_GMD.fb_EM1K0_GMD_VRC_60.q_xOPN_DO : BOOL (4594704 8)
    GVL_GMD.fb_EM1K0_GMD_VRC_70 : L2SI_Vacuum_Library.FB_VRC (4594720 1440)
    GVL_GMD.fb_EM1K0_GMD_VRC_70.i_xClsLS : BOOL (4596136 8)
    GVL_GMD.fb_EM1K0_GMD_VRC_70.i_xOpnLS : BOOL (4596128 8)
    GVL_GMD.fb_EM1K0_GMD_VRC_70.q_xOPN_DO : BOOL (4596144 8)
    GVL_INJ.GCM_80 : L2SI_Vacuum_Library.FB_GCM (4579264 576)
    GVL_INJ.GCM_80.i_iPRESS_R : INT (4579808 16)
    GVL_INJ.GFM_83 : FB_PressureTransducer (4581664 608)
    GVL_INJ.GFM_83.iError : BOOL (4582240 8)
    GVL_INJ.GFM_83.i_iPRESS_R : INT (4582256 16)
    GVL_INJ.GFM_84 : FB_PressureTransducer (4581056 608)
    GVL_INJ.GFM_84.iError : BOOL (4581632 8)
    GVL_INJ.GFM_84.i_iPRESS_R : INT (4581648 16)
    GVL_INJ.GFM_85 : FB_PressureTransducer (4580448 608)
    GVL_INJ.GFM_85.iError : BOOL (4581024 8)
    GVL_INJ.GFM_85.i_iPRESS_R : INT (4581040 16)
    GVL_INJ.GFM_86 : FB_PressureTransducer (4579840 608)
    GVL_INJ.GFM_86.iError : BOOL (4580416 8)
    GVL_INJ.GFM_86.i_iPRESS_R : INT (4580432 16)
    GVL_INJ.RTD : FB_RTD (4582464 192)
    GVL_INJ.RTD.bError : BOOL (4582600 8)
    GVL_INJ.RTD.bOverrange : BOOL (4582616 8)
    GVL_INJ.RTD.bUnderrange : BOOL (4582608 8)
    GVL_INJ.RTD.iRaw : INT (4582624 16)
    GVL_INJ.VCN_40 : L2SI_Vacuum_Library.FB_VCN (4509440 480)
    GVL_INJ.VCN_40.q_iRawPosition : INT (4509888 16)
    GVL_INJ.VGP_40 : FB_VGP (4509952 64832)
    GVL_INJ.VGP_40.Axis.NcToPlc : NCTOPLC_AXIS_REF (4513536 2048)
    GVL_INJ.VGP_40.Axis.PlcToNc : PLCTONC_AXIS_REF (4512512 1024)
    GVL_INJ.VGP_40.InfoData_State : UINT (4521472 16)
    GVL_INJ.VVC_80 : L2SI_Vacuum_Library.FB_VVC (4574784 640)
    GVL_INJ.VVC_80.q_xOPN_DO : BOOL (4575392 8)
    GVL_INJ.VVC_81 : L2SI_Vacuum_Library.FB_VVC (4575424 640)
    GVL_INJ.VVC_81.q_xOPN_DO : BOOL (4576032 8)
    GVL_INJ.VVC_82 : L2SI_Vacuum_Library.FB_VVC (4576064 640)
    GVL_INJ.VVC_82.q_xOPN_DO : BOOL (4576672 8)
    GVL_INJ.VVC_83 : L2SI_Vacuum_Library.FB_VVC (4576704 640)
    GVL_INJ.VVC_83.q_xOPN_DO : BOOL (4577312 8)
    GVL_INJ.VVC_84 : L2SI_Vacuum_Library.FB_VVC (4577344 640)
    GVL_INJ.VVC_84.q_xOPN_DO : BOOL (4577952 8)
    GVL_INJ.VVC_85 : L2SI_Vacuum_Library.FB_VVC (4577984 640)
    GVL_INJ.VVC_85.q_xOPN_DO : BOOL (4578592 8)
    GVL_INJ.VVC_86 : L2SI_Vacuum_Library.FB_VVC (4578624 640)
    GVL_INJ.VVC_86.q_xOPN_DO : BOOL (4579232 8)
    GVL_INJ.hv1 : FB_HighVoltage (4582272 96)
    GVL_INJ.hv1.q_HV_DO : BOOL (4582336 8)
    GVL_INJ.hv2 : FB_HighVoltage (4582368 96)
    GVL_INJ.hv2.q_HV_DO : BOOL (4582432 8)
    GVL_INJ.xOverrideMode : BOOL (4500760 8)
    GVL_Logger.asLoggerMesgBuffer : Tc2_System.T_MaxString (4096208 104448)
    GVL_Logger.cnLoggerMesgArraySize : INT (4096112 16)
    GVL_Logger.cnSyslogVer : WORD (4096192 16)
    GVL_Logger.csNILVALUE : STRING(1) (4096088 16)
    GVL_Logger.fbLogMessage : LCLS_General.FB_LogMessage (4204768 22752)
    GVL_Logger.fbLoggerBuffer : Tc2_Utilities.FB_StringRingBuffer (4227520 4864)
    GVL_Logger.gsCurrentTime : Tc2_System.T_MaxString (4200656 2048)
    GVL_Logger.gsHostName : Tc2_System.T_MaxString (4202704 2048)
    GVL_VARIABLES.xSystemOverrideMode : BOOL (4500768 8)
    Global_Constants.EMPTY_EVENT_CLASS : GUID (4242976 128)
    Global_Constants.EMPTY_EVENT_ID : UDINT (4243104 32)
    Global_Constants.EMPTY_SEVERITY : TcEventSeverity (4242448 16)
    Global_Constants.SUCCESS_EVENT : TcEventEntry (4243136 192)
    Global_Variables.ADSIGRP_DEVICE_DATA : UDINT (4447104 32)
    Global_Variables.ADSIGRP_IOIMAGE_CLEARI : UDINT (4447008 32)
    Global_Variables.ADSIGRP_IOIMAGE_CLEARO : UDINT (4447040 32)
    Global_Variables.ADSIGRP_IOIMAGE_RISIZE : UDINT (4446880 32)
    Global_Variables.ADSIGRP_IOIMAGE_ROSIZE : UDINT (4446976 32)
    Global_Variables.ADSIGRP_IOIMAGE_RWIB : UDINT (4446816 32)
    Global_Variables.ADSIGRP_IOIMAGE_RWIOB : UDINT (4447072 32)
    Global_Variables.ADSIGRP_IOIMAGE_RWIX : UDINT (4446848 32)
    Global_Variables.ADSIGRP_IOIMAGE_RWOB : UDINT (4446912 32)
    Global_Variables.ADSIGRP_IOIMAGE_RWOX : UDINT (4446944 32)
    Global_Variables.ADSIGRP_SYMNAME : UDINT (4446400 32)
    Global_Variables.ADSIGRP_SYMNOTE : UDINT (4446784 32)
    Global_Variables.ADSIGRP_SYMTAB : UDINT (4446368 32)
    Global_Variables.ADSIGRP_SYMVAL : UDINT (4446432 32)
    Global_Variables.ADSIGRP_SYM_DOWNLOAD : UDINT (4446688 32)
    Global_Variables.ADSIGRP_SYM_HNDBYNAME : UDINT (4446464 32)
    Global_Variables.ADSIGRP_SYM_INFOBYNAME : UDINT (4446592 32)
    Global_Variables.ADSIGRP_SYM_INFOBYNAMEEX : UDINT (4446656 32)
    Global_Variables.ADSIGRP_SYM_RELEASEHND : UDINT (4446560 32)
    Global_Variables.ADSIGRP_SYM_UPLOAD : UDINT (4446720 32)
    Global_Variables.ADSIGRP_SYM_UPLOADINFO : UDINT (4446752 32)
    Global_Variables.ADSIGRP_SYM_VALBYHND : UDINT (4446528 32)
    Global_Variables.ADSIGRP_SYM_VALBYNAME : UDINT (4446496 32)
    Global_Variables.ADSIGRP_SYM_VERSION : UDINT (4446624 32)
    Global_Variables.ADSIOFFS_DEVDATA_ADSSTATE : UDINT (4447136 32)
    Global_Variables.ADSIOFFS_DEVDATA_DEVSTATE : UDINT (4447168 32)
    Global_Variables.ADSLOG_MSGTYPE_ERROR : DWORD (4448224 32)
    Global_Variables.ADSLOG_MSGTYPE_HINT : DWORD (4448160 32)
    Global_Variables.ADSLOG_MSGTYPE_LOG : DWORD (4448256 32)
    Global_Variables.ADSLOG_MSGTYPE_MSGBOX : DWORD (4448288 32)
    Global_Variables.ADSLOG_MSGTYPE_RESOURCE : DWORD (4448320 32)
    Global_Variables.ADSLOG_MSGTYPE_STRING : DWORD (4448352 32)
    Global_Variables.ADSLOG_MSGTYPE_WARN : DWORD (4448192 32)
    Global_Variables.ADSSTATE_CONFIG : UINT (4446256 16)
    Global_Variables.ADSSTATE_ERROR : UINT (4446192 16)
    Global_Variables.ADSSTATE_EXCEPTION : UINT (4446320 16)
    Global_Variables.ADSSTATE_IDLE : UINT (4446032 16)
    Global_Variables.ADSSTATE_INCOMPATIBLE : UINT (4446304 16)
    Global_Variables.ADSSTATE_INIT : UINT (4446064 16)
    Global_Variables.ADSSTATE_INVALID : UINT (4446016 16)
    Global_Variables.ADSSTATE_LOADCFG : UINT (4446144 16)
    Global_Variables.ADSSTATE_MAXSTATES : UINT (4446336 16)
    Global_Variables.ADSSTATE_POWERFAILURE : UINT (4446160 16)
    Global_Variables.ADSSTATE_POWERGOOD : UINT (4446176 16)
    Global_Variables.ADSSTATE_RECONFIG : UINT (4446272 16)
    Global_Variables.ADSSTATE_RESET : UINT (4446048 16)
    Global_Variables.ADSSTATE_RESUME : UINT (4446240 16)
    Global_Variables.ADSSTATE_RUN : UINT (4446096 16)
    Global_Variables.ADSSTATE_SAVECFG : UINT (4446128 16)
    Global_Variables.ADSSTATE_SHUTDOWN : UINT (4446208 16)
    Global_Variables.ADSSTATE_START : UINT (4446080 16)
    Global_Variables.ADSSTATE_STOP : UINT (4446112 16)
    Global_Variables.ADSSTATE_STOPPING : UINT (4446288 16)
    Global_Variables.ADSSTATE_SUSPEND : UINT (4446224 16)
    Global_Variables.AMSLOGGER_IGR_GENERAL : UDINT (4306688 32)
    Global_Variables.AMSLOGGER_IOF_MODE : UDINT (4306720 32)
    Global_Variables.AMSPORT_AMSLOGGER : UINT (4306752 16)
    Global_Variables.AMSPORT_EVENTLOG : UINT (4445728 16)
    Global_Variables.AMSPORT_LOGGER : UINT (4445648 16)
    Global_Variables.AMSPORT_R0_CAM : UINT (4445952 16)
    Global_Variables.AMSPORT_R0_CAMTOOL : UINT (4445968 16)
    Global_Variables.AMSPORT_R0_CNC : UINT (4445840 16)
    Global_Variables.AMSPORT_R0_IO : UINT (4445760 16)
    Global_Variables.AMSPORT_R0_ISG : UINT (4445824 16)
    Global_Variables.AMSPORT_R0_LINE : UINT (4445856 16)
    Global_Variables.AMSPORT_R0_NC : UINT (4445776 16)
    Global_Variables.AMSPORT_R0_NCSAF : UINT (4445792 16)
    Global_Variables.AMSPORT_R0_NCSVB : UINT (4445808 16)
    Global_Variables.AMSPORT_R0_PLC : UINT (4445872 16)
    Global_Variables.AMSPORT_R0_PLC_RTS1 : UINT (4445888 16)
    Global_Variables.AMSPORT_R0_PLC_RTS2 : UINT (4445904 16)
    Global_Variables.AMSPORT_R0_PLC_RTS3 : UINT (4445920 16)
    Global_Variables.AMSPORT_R0_PLC_RTS4 : UINT (4445936 16)
    Global_Variables.AMSPORT_R0_RTIME : UINT (4445744 16)
    Global_Variables.AMSPORT_R3_SCOPESERVER : UINT (4446000 16)
    Global_Variables.AMSPORT_R3_SYSSERV : UINT (4445984 16)
    Global_Variables.BOOTDATAFLAGS_PERSISTENT_INVALID : BYTE (4448392 8)
    Global_Variables.BOOTDATAFLAGS_PERSISTENT_LOADED : BYTE (4448384 8)
    Global_Variables.BOOTDATAFLAGS_RETAIN_INVALID : BYTE (4446352 8)
    Global_Variables.BOOTDATAFLAGS_RETAIN_LOADED : BYTE (4445640 8)
    Global_Variables.BOOTDATAFLAGS_RETAIN_REQUESTED : BYTE (4446360 8)
    Global_Variables.DATE_AND_TIME_SECPERDAY : DWORD (4314336 32)
    Global_Variables.DATE_AND_TIME_SECPERWEEK : DWORD (4319648 32)
    Global_Variables.DBG_OUTPUT_FILE : DWORD (4325920 32)
    Global_Variables.DBG_OUTPUT_LOG : DWORD (4325888 32)
    Global_Variables.DBG_OUTPUT_NONE : DWORD (4325856 32)
    Global_Variables.DBG_OUTPUT_VISU : DWORD (4325952 32)
    Global_Variables.DEFAULT_ADS_TIMEOUT : TIME (4449056 32)
    Global_Variables.DEFAULT_BACKLASHVALUE : LREAL (4456704 64)
    Global_Variables.DEFAULT_CSV_FIELD_DOUBLE_QUOTE : BYTE (4442192 8)
    Global_Variables.DEFAULT_CSV_FIELD_SEP : BYTE (4232536 8)
    Global_Variables.DEFAULT_CSV_RECORD_SEP_CR : BYTE (4442200 8)
    Global_Variables.DEFAULT_CSV_RECORD_SEP_LF : BYTE (4443152 8)
    Global_Variables.DEFAULT_HOME_POSITION : LREAL (4456640 64)
    Global_Variables.EMPTY_ARG_VALUE : Tc2_Utilities.T_Arg (4307296 96)
    Global_Variables.EMPTY_GUID_REGSTRING : STRING(38) (4445320 312)
    Global_Variables.EMPTY_GUID_STRING : STRING(36) (4445024 296)
    Global_Variables.EMPTY_GUID_STRUCT : GUID (4444896 128)
    Global_Variables.EMPTY_ROUTE_ENTRY : Tc2_Utilities.ST_AmsRouteEntry (4305440 1184)
    Global_Variables.FLOATREC_EXP_IS_INF : INT (4306800 16)
    Global_Variables.FLOATREC_EXP_IS_NAN : INT (4306784 16)
    Global_Variables.FLOATREC_MAX_DIGITS : INT (4306816 16)
    Global_Variables.FLOATREC_MAX_PRECISION : INT (4306832 16)
    Global_Variables.FLOATREC_MIN_PRECISION : INT (4306848 16)
    Global_Variables.FMTERR_ARGTYPEINVALID : DWORD (4307168 32)
    Global_Variables.FMTERR_ASTERISKPOSITION : DWORD (4306944 32)
    Global_Variables.FMTERR_DESTBUFFOVERFLOW : DWORD (4307264 32)
    Global_Variables.FMTERR_FLAGPOSITION : DWORD (4307040 32)
    Global_Variables.FMTERR_INSUFFICIENTARGS : DWORD (4307232 32)
    Global_Variables.FMTERR_NOERROR : DWORD (4306880 32)
    Global_Variables.FMTERR_PERCENTSIGNPOSITION : DWORD (4306912 32)
    Global_Variables.FMTERR_PRECISIONDOTPOSITION : DWORD (4307104 32)
    Global_Variables.FMTERR_PRECISIONVALUE : DWORD (4307008 32)
    Global_Variables.FMTERR_TYPEFIELDVALUE : DWORD (4307136 32)
    Global_Variables.FMTERR_UNACCEPTEDPARAMETER : DWORD (4307200 32)
    Global_Variables.FMTERR_WIDTHPRECISIONVALPOS : DWORD (4307072 32)
    Global_Variables.FMTERR_WIDTHVALUE : DWORD (4306976 32)
    Global_Variables.FOPEN_MODEAPPEND : DWORD (4448480 32)
    Global_Variables.FOPEN_MODEBINARY : DWORD (4448544 32)
    Global_Variables.FOPEN_MODEPLUS : DWORD (4448512 32)
    Global_Variables.FOPEN_MODEREAD : DWORD (4448416 32)
    Global_Variables.FOPEN_MODETEXT : DWORD (4448576 32)
    Global_Variables.FOPEN_MODEWRITE : DWORD (4448448 32)
    Global_Variables.FORMAT_DECASC_CODES : BYTE (4307648 80)
    Global_Variables.FORMAT_HEXASC_CODES : BYTE (4307392 256)
    Global_Variables.FORMAT_MAX_ARGS : INT (4306768 16)
    Global_Variables.GLOBAL_DCF77_PULSE_SPLIT : TIME (4243456 32)
    Global_Variables.GLOBAL_DCF77_SEQUENCE_CHECK : BOOL (4096104 8)
    Global_Variables.GLOBAL_FORMAT_HASH_PREFIX_TYPE : Tc2_Utilities.E_HashPrefixTypes (4243408 16)
    Global_Variables.GLOBAL_SBCS_TABLE : Tc2_Utilities.E_SBCSType (4243424 16)
    Global_Variables.HKEY_MAX_BINARY_DATA_SIZE : UDINT (4306656 32)
    Global_Variables.IPHELPERAPI_ADAPTERSINFO : UDINT (4305120 32)
    Global_Variables.IPHELPERAPI_IPADDRBYHOSTNAME : UDINT (4305152 32)
    Global_Variables.MAX_ADAPTER_ADDRESS_LENGTH : UDINT (4305024 32)
    Global_Variables.MAX_ADAPTER_DESCRIPTION_LENGTH : UDINT (4304992 32)
    Global_Variables.MAX_ADAPTER_NAME_LENGTH : UDINT (4304960 32)
    Global_Variables.MAX_AVERAGE_MEASURES : INT (4243392 16)
    Global_Variables.MAX_LOCAL_ADAPTERS : UDINT (4305184 32)
    Global_Variables.MAX_REMOTE_PCS : INT (4243440 16)
    Global_Variables.MAX_ROUTE_ADDR_LEN : BYTE (4305416 8)
    Global_Variables.MAX_ROUTE_NAME_LEN : BYTE (4305408 8)
    Global_Variables.MAX_ROUTE_TRANSPORT : BYTE (4305432 8)
    Global_Variables.MAX_STRING_LENGTH : UDINT (4449152 32)
    Global_Variables.MIN_ROUTE_TRANSPORT : BYTE (4305424 8)
    Global_Variables.PI : LREAL (4449088 64)
    Global_Variables.ROUTE_FLAG_DYNAMIC : DWORD (4305344 32)
    Global_Variables.ROUTE_FLAG_NOOVERRIDE : DWORD (4305376 32)
    Global_Variables.ROUTE_FLAG_TEMPORARY : DWORD (4305312 32)
    Global_Variables.SYSTEMSERVICE_ADDREMOTE : UDINT (4305216 32)
    Global_Variables.SYSTEMSERVICE_CHANGENETID : UDINT (4447968 32)
    Global_Variables.SYSTEMSERVICE_CLOSEHANDLE : UDINT (4447328 32)
    Global_Variables.SYSTEMSERVICE_CREATEFILE : UDINT (4447296 32)
    Global_Variables.SYSTEMSERVICE_DELREMOTE : UDINT (4305248 32)
    Global_Variables.SYSTEMSERVICE_ENUMREMOTE : UDINT (4305280 32)
    Global_Variables.SYSTEMSERVICE_FCLOSE : UDINT (4447392 32)
    Global_Variables.SYSTEMSERVICE_FDELETE : UDINT (4447712 32)
    Global_Variables.SYSTEMSERVICE_FEOF : UDINT (4447680 32)
    Global_Variables.SYSTEMSERVICE_FFILEFIND : UDINT (4306624 32)
    Global_Variables.SYSTEMSERVICE_FGETS : UDINT (4447552 32)
    Global_Variables.SYSTEMSERVICE_FOPEN : UDINT (4447360 32)
    Global_Variables.SYSTEMSERVICE_FPRINTF : UDINT (4447648 32)
    Global_Variables.SYSTEMSERVICE_FPUTS : UDINT (4447584 32)
    Global_Variables.SYSTEMSERVICE_FREAD : UDINT (4447424 32)
    Global_Variables.SYSTEMSERVICE_FRENAME : UDINT (4447744 32)
    Global_Variables.SYSTEMSERVICE_FSCANF : UDINT (4447616 32)
    Global_Variables.SYSTEMSERVICE_FSEEK : UDINT (4447488 32)
    Global_Variables.SYSTEMSERVICE_FTELL : UDINT (4447520 32)
    Global_Variables.SYSTEMSERVICE_FWRITE : UDINT (4447456 32)
    Global_Variables.SYSTEMSERVICE_IPHELPERAPI : UDINT (4305056 32)
    Global_Variables.SYSTEMSERVICE_IPHOSTNAME : UDINT (4305088 32)
    Global_Variables.SYSTEMSERVICE_MKDIR : UDINT (4447776 32)
    Global_Variables.SYSTEMSERVICE_OPENCREATE : UDINT (4447200 32)
    Global_Variables.SYSTEMSERVICE_OPENREAD : UDINT (4447232 32)
    Global_Variables.SYSTEMSERVICE_OPENWRITE : UDINT (4447264 32)
    Global_Variables.SYSTEMSERVICE_REG_HKEYLOCALMACHINE : UDINT (4447840 32)
    Global_Variables.SYSTEMSERVICE_RMDIR : UDINT (4447808 32)
    Global_Variables.SYSTEMSERVICE_SENDEMAIL : UDINT (4447872 32)
    Global_Variables.SYSTEMSERVICE_STARTPROCESS : UDINT (4447936 32)
    Global_Variables.SYSTEMSERVICE_TIMESERVICES : UDINT (4447904 32)
    Global_Variables.SYSTEMSTATEFLAGS_BSOD : BYTE (4448400 8)
    Global_Variables.SYSTEMSTATEFLAGS_RTVIOLATION : BYTE (4448408 8)
    Global_Variables.SYSTEMTIME_DATEDELTA_OFFSET : DWORD (4313984 32)
    Global_Variables.SYSTEMTIME_DATE_AND_TIME_MAX : Tc2_Utilities.T_ULARGE_INTEGER (4314272 64)
    Global_Variables.SYSTEMTIME_DATE_AND_TIME_MAX64 : ULINT (4314624 64)
    Global_Variables.SYSTEMTIME_DATE_AND_TIME_MIN : Tc2_Utilities.T_ULARGE_INTEGER (4314208 64)
    Global_Variables.SYSTEMTIME_DATE_AND_TIME_MIN64 : ULINT (4314560 64)
    Global_Variables.SYSTEMTIME_MAX_MONTHDAYS : WORD (4313136 384)
    Global_Variables.SYSTEMTIME_MAX_YEARSDAY : WORD (4313520 448)
    Global_Variables.SYSTEMTIME_TICKSPERDAY : Tc2_Utilities.T_ULARGE_INTEGER (4314144 64)
    Global_Variables.SYSTEMTIME_TICKSPERDAY64 : ULINT (4314496 64)
    Global_Variables.SYSTEMTIME_TICKSPERMSEC : Tc2_Utilities.T_ULARGE_INTEGER (4314016 64)
    Global_Variables.SYSTEMTIME_TICKSPERMSEC64 : ULINT (4314368 64)
    Global_Variables.SYSTEMTIME_TICKSPERSEC : Tc2_Utilities.T_ULARGE_INTEGER (4314080 64)
    Global_Variables.SYSTEMTIME_TICKSPERSEC64 : ULINT (4314432 64)
    Global_Variables.TCEVENTFLAG_AUTOFMTALL : WORD (4448912 16)
    Global_Variables.TCEVENTFLAG_FMTSELF : WORD (4448848 16)
    Global_Variables.TCEVENTFLAG_LOG : WORD (4448864 16)
    Global_Variables.TCEVENTFLAG_MSGBOX : WORD (4448880 16)
    Global_Variables.TCEVENTFLAG_PRIOCLASS : WORD (4448832 16)
    Global_Variables.TCEVENTFLAG_SRCID : WORD (4448896 16)
    Global_Variables.TCEVENTSTATE_CONFIRMED : WORD (4448976 16)
    Global_Variables.TCEVENTSTATE_INVALID : WORD (4448928 16)
    Global_Variables.TCEVENTSTATE_RESET : WORD (4448960 16)
    Global_Variables.TCEVENTSTATE_RESETCON : WORD (4448992 16)
    Global_Variables.TCEVENTSTATE_SIGNALED : WORD (4448944 16)
    Global_Variables.TCEVENT_FMTPRGSIZE : INT (4449024 16)
    Global_Variables.TCEVENT_SRCNAMESIZE : INT (4449008 16)
    Global_Variables.TIMESERVICE_ADJUSTTIMETORTC : UDINT (4448096 32)
    Global_Variables.TIMESERVICE_DATEANDTIME : UDINT (4448000 32)
    Global_Variables.TIMESERVICE_RTCTIMEDIFF : UDINT (4448064 32)
    Global_Variables.TIMESERVICE_SYSTEMTIMES : UDINT (4448032 32)
    Global_Variables.TIMESERVICE_TIMEZONINFORMATION : UDINT (4448128 32)
    Global_Variables.TcMcGlobal : Tc2_MC2._TCMCGLOBAL (4449728 6880)
    Global_Variables.WEST_EUROPE_TZI : Tc2_Utilities.ST_TimeZoneInformation (4314688 864)
    Global_Variables.eWatchdogConfig : Tc2_System.E_WATCHDOG_TIME_CONFIG (4449040 16)
    Global_Variables.fbGetCurTaskIdx : Tc2_System.GETCURTASKINDEX (4232960 128)
    Global_Variables.g_DummyVG : L2SI_Vacuum_Library.ST_VG (4232544 416)
    Global_Variables.g_iSizeOfGGOArray : INT (4232432 16)
    Global_Variables.g_stSystem : LCLS_General.ST_System (4232448 88)
    Global_Variables.nCTRL_LOGGER_DATA_ARRAY_SIZE : UINT (4449712 16)
    Global_Variables.nWatchdogTime : BYTE (4449696 8)
    Global_Variables.stCtrl_GLOBAL_CycleTimeInterpretation : Tc2_ControllerToolbox.ST_CTRL_CYCLE_TIME_INTERPRETATION (4456768 128)
    Global_Version.stLibVersion_L2SI_Vacuum_Library : ST_LibVersion (4233088 288)
    L2SI_Vacuum_Library.Global_Variables.g_stSystem.I_EcatMaster1 : AMSNETID (4232488 48)
    LCLS_General.DefaultGlobals.stSys.I_EcatMaster1 : AMSNETID (4096040 48)
    PMPS_GVL.AccumulatedFF : ULINT (3072064 64)
    PMPS_GVL.EXCLUDED_ASSERTION_ID : UDINT (4238656 32)
    PMPS_GVL.FAST_TEST_VELOCITY : LREAL (4238784 64)
    PMPS_GVL.MAX_ASSERTIONS : UDINT (4242400 32)
    PMPS_GVL.MAX_DEVICE_STATES : UDINT (4238688 32)
    PMPS_GVL.MAX_FAST_FAULTS : UINT (4238848 16)
    PMPS_GVL.SuccessfulPreemption : ULINT (3072000 64)
    PMPS_GVL.VISIBLE_TEST_VELOCITY : LREAL (4238720 64)
    PMPS_GVL.cnMaxStateArrayLen : INT (4238864 16)
    PMPS_GVL.cstFullBeam : ST_BeamParams (4238880 1760)
    PMPS_GVL.cstSafeBeam : ST_BeamParams (4240640 1760)
    PMPS_GVL.g_areVBoundaries : REAL (4242464 512)
    PMPS_GVL.g_cBoundaries : INT (4242432 16)
    PMPS_GVL.stCurrentBeamParameters : ST_BeamParams (4236896 1760)
    PMPS_GVL.stReqFBDBeamParamsSum : ST_BeamParams (4233376 1760)
    PMPS_GVL.stReqMethBeamParamSum : ST_BeamParams (4235136 1760)
    PRG_DIAGNOSTIC.fbTime : Tc2_Utilities.FB_LocalSystemTime (4478688 19040)
    PRG_DIAGNOSTIC.logTimer : Tc2_Standard.TON (4497728 224)
    PRG_DIAGNOSTIC.plcHeartbeat : UDINT (4498112 32)
    PRG_DIAGNOSTIC.plcInfo : STRING(40) (4498144 328)
    PRG_DIAGNOSTIC.plcLocalTime : STRING(25) (4498472 208)
    PRG_DIAGNOSTIC.plcName : STRING(15) (4497952 128)
    PRG_DIAGNOSTIC.simHeartbeat : UINT (4498080 16)
    PRG_INJ.DefaultSP : REAL (4498720 32)
    PRG_INJ.fullScale : REAL (4498688 32)
    PRG_INJ.i : INT (4498096 16)
    PRG_INJ.rFULL_SCALE : REAL (4498752 32)
    PRG_PressureControl.BasicPID : Tc2_Utilities.FB_BasicPID (4507584 1856)
    PRG_PressureControl.arrTable : Tc2_Utilities.FLOAT (4500800 1152)
    PRG_PressureControl.bARWactive : BOOL (4500744 8)
    PRG_PressureControl.bError : BOOL (4500736 8)
    PRG_PressureControl.bExtrapolate : BOOL (4498680 8)
    PRG_PressureControl.bHold : BOOL (4499736 8)
    PRG_PressureControl.bInit : BOOL (4500752 8)
    PRG_PressureControl.bSync : BOOL (4499728 8)
    PRG_PressureControl.eErrorId : Tc2_ControllerToolbox.E_CTRL_ERRORCODES (4499760 16)
    PRG_PressureControl.eMode : Tc2_ControllerToolbox.E_CTRL_MODE (4499744 16)
    PRG_PressureControl.fActualValue : Tc2_Utilities.FLOAT (4499840 64)
    PRG_PressureControl.fBasicCtrlOutput : Tc2_Utilities.FLOAT (4499968 64)
    PRG_PressureControl.fCtrlOutput : Tc2_Utilities.FLOAT (4499904 64)
    PRG_PressureControl.fManSyncValue : Tc2_Utilities.FLOAT (4500160 64)
    PRG_PressureControl.fManValue : Tc2_Utilities.FLOAT (4500096 64)
    PRG_PressureControl.fSetpointValue : Tc2_Utilities.FLOAT (4499776 64)
    PRG_PressureControl.f_Rep_POS : Tc2_Utilities.FLOAT (4500032 64)
    PRG_PressureControl.fbCTRL_LIN_INTERPOLATION : Tc2_ControllerToolbox.FB_CTRL_LIN_INTERPOLATION (4505856 1728)
    PRG_PressureControl.fbCTRL_Normalize : Tc2_ControllerToolbox.FB_CTRL_NORMALIZE (4504128 1728)
    PRG_PressureControl.fbCTRL_PI : Tc2_ControllerToolbox.FB_CTRL_PI (4501952 2176)
    PRG_PressureControl.nDataTable_NumberOfRows : INT (4499712 16)
    PRG_PressureControl.stCTRL_LIN_INTERPOLATION_PARAMS : Tc2_ControllerToolbox.ST_CTRL_LIN_INTERPOLATION_PARAMS (4500608 128)
    PRG_PressureControl.stCTRL_PI_PARAMS : Tc2_ControllerToolbox.ST_CTRL_PI_PARAMS (4500224 384)
    ParameterList.cSourceNameSize : UDINT (4243360 32)
    TwinCAT_LicenseInfoVarList._LicenseInfo : PlcLicenseInfo (4604640 3072)
    TwinCAT_SystemInfoVarList._AppInfo : PlcAppSystemInfo (4607712 2048)
    TwinCAT_SystemInfoVarList._TaskInfo : PlcTaskSystemInfo (4609792 1024)
    TwinCAT_SystemInfoVarList._TaskOid_PlcTask : OTCID (4610816 32)
    TwinCAT_SystemInfoVarList._TaskPouOid_PlcTask : OTCID (4609760 32)
    TwinCAT_SystemInfoVarList.__PlcTask : _Implicit_Task_Info (4610848 704)

PLC Project (2): plc_kfe_gmd_vac_sim
====================================

    Project root: /home/travis/build/pcdshub/lcls-plc-kfe-gmd-vac/plc/plc-kfe-gmd-vac
    Project path: plc_kfe_gmd_vac_sim/plc_kfe_gmd_vac_sim.plcproj
    TMC path:     plc_kfe_gmd_vac_sim/plc_kfe_gmd_vac_sim.tmc
    AMS ID:       5.59.121.68.1.1
    IP Address:   5.59.121.68 (* based on AMS ID)
    Port:         852

    Source files:
        1.) plc_kfe_gmd_vac_sim/GVLs/GVL_GMD.TcGVL
        2.) plc_kfe_gmd_vac_sim/GVLs/GVL_VARIABLES.TcGVL
        3.) plc_kfe_gmd_vac_sim/POUs/MAIN.TcPOU
        4.) plc_kfe_gmd_vac_sim/POUs/OverridePressure.TcPOU
        5.) plc_kfe_gmd_vac_sim/POUs/PRG_DIAGNOSTIC.TcPOU
        6.) plc_kfe_gmd_vac_sim/POUs/PRG_GMD.TcPOU
        7.) plc_kfe_gmd_vac_sim/SimTask.TcTTO

    POUs:
        1.) MAIN
        2.) OverridePressure
        3.) PRG_DIAGNOSTIC
        4.) PRG_GMD

    GVLs:
        1.) GVL_GMD
        2.) GVL_VARIABLES

GVLs/GVL_GMD.TcGVL (TcPlcObject)
--------------------------------

### GVL_GMD: Declaration

```vhdl
VAR_GLOBAL

// ST_Volume

st_GMD : ST_Volume := (rVolume := 1E3, rPressure := Global_Pressure, rVLeak := Global_Leak);
st_EM1K0_GMD_VRC_10_VOL : ST_Volume := (rVolume := 1E3, rPressure := Global_Pressure, rVLeak := Global_Leak);
st_RoughingLine : ST_Volume := (rVolume := 1E3, rPressure := Global_Pressure, rVLeak := Global_Leak);
st_EM1K0_GMD_VRC_20_VOL : ST_Volume := (rVolume := 1E3, rPressure := Global_Pressure, rVLeak := Global_Leak);
st_EM1K0_GMD_VRC_30_VOL : ST_Volume := (rVolume := 1E3, rPressure := Global_Pressure, rVLeak := Global_Leak);
st_EM1K0_GMD_VRC_50_VOL : ST_Volume := (rVolume := 1E3, rPressure := Global_Pressure, rVLeak := Global_Leak);
st_EM1K0_GMD_VRC_60_VOL : ST_Volume := (rVolume := 1E3, rPressure := Global_Pressure, rVLeak := Global_Leak);
st_EM1K0_GMD_VRC_70_VOL : ST_Volume := (rVolume := 1E3, rPressure := Global_Pressure, rVLeak := Global_Leak);

// ST_MKS_275

st_EM1K0_GMD_GPI_10 : ST_MKS_275 := (q_xGaugeConnected := TRUE);
st_EM1K0_GMD_GPI_40 : ST_MKS_275 := (q_xGaugeConnected := TRUE);
st_EM1K0_GMD_GPI_70 : ST_MKS_275 := (q_xGaugeConnected := TRUE);

// FB_MKS_275

fb_EM1K0_GMD_GPI_10 : FB_MKS_275;
fb_EM1K0_GMD_GPI_40 : FB_MKS_275;
fb_EM1K0_GMD_GPI_70 : FB_MKS_275;

// ST_MechPump

st_EM1K0_GMD_PTM_10 : ST_MechPump := (iMaxSpd:=1000, rBasePress:=1E-9, rMaxLoad:=0.95);
st_EM1K0_GMD_PTM_20 : ST_MechPump := (iMaxSpd:=1000, rBasePress:=1E-9, rMaxLoad:=0.95);
st_EM1K0_GMD_PTM_30 : ST_MechPump := (iMaxSpd:=1000, rBasePress:=1E-9, rMaxLoad:=0.95);
st_EM1K0_GMD_PRT_40 : ST_MechPump := (rMRE:=10, rBasePress:=1E-3);
st_EM1K0_GMD_PTM_40 : ST_MechPump := (iMaxSpd:=1000, rBasePress:=1E-9, rMaxLoad:=0.95);
st_EM1K0_GMD_PTM_50 : ST_MechPump := (iMaxSpd:=1000, rBasePress:=1E-9, rMaxLoad:=0.95);
st_EM1K0_GMD_PTM_60 : ST_MechPump := (iMaxSpd:=1000, rBasePress:=1E-9, rMaxLoad:=0.95);
st_EM1K0_GMD_PTM_70 : ST_MechPump := (iMaxSpd:=1000, rBasePress:=1E-9, rMaxLoad:=0.95);

// FB_TurboPump

fb_EM1K0_GMD_PTM_10 : FB_TurboPump;
fb_EM1K0_GMD_PTM_20 : FB_TurboPump;
fb_EM1K0_GMD_PTM_30 : FB_TurboPump;
fb_EM1K0_GMD_PTM_40 : FB_TurboPump;
fb_EM1K0_GMD_PTM_50 : FB_TurboPump;
fb_EM1K0_GMD_PTM_60 : FB_TurboPump;
fb_EM1K0_GMD_PTM_70 : FB_TurboPump;

// ST_VacuumValve

st_EM1K0_GMD_VRC_10 : ST_VacuumValve := (q_xClsLS := TRUE, q_xOpnLS := FALSE);
st_EM1K0_GMD_VRC_20 : ST_VacuumValve := (q_xClsLS := TRUE, q_xOpnLS := FALSE);
st_EM1K0_GMD_VRC_30 : ST_VacuumValve := (q_xClsLS := TRUE, q_xOpnLS := FALSE);
st_EM1K0_GMD_VRC_50 : ST_VacuumValve := (q_xClsLS := TRUE, q_xOpnLS := FALSE);
st_EM1K0_GMD_VRC_60 : ST_VacuumValve := (q_xClsLS := TRUE, q_xOpnLS := FALSE);
st_EM1K0_GMD_VRC_70 : ST_VacuumValve := (q_xClsLS := TRUE, q_xOpnLS := FALSE);

// FB_VacuumValve

fb_EM1K0_GMD_VRC_10 : FB_VacuumValve;
fb_EM1K0_GMD_VRC_20 : FB_VacuumValve;
fb_EM1K0_GMD_VRC_30 : FB_VacuumValve;
fb_EM1K0_GMD_VRC_50 : FB_VacuumValve;
fb_EM1K0_GMD_VRC_60 : FB_VacuumValve;
fb_EM1K0_GMD_VRC_70 : FB_VacuumValve;

// ST_MKS_422

st_EM1K0_GMD_GCC_10 : ST_MKS_422 := (q_xGaugeConnected := TRUE);
st_EM1K0_GMD_GCC_20 : ST_MKS_422 := (q_xGaugeConnected := TRUE);
st_EM1K0_GMD_GCC_30 : ST_MKS_422 := (q_xGaugeConnected := TRUE);
st_EM1K0_GMD_GCC_40 : ST_MKS_422 := (q_xGaugeConnected := TRUE);
st_EM1K0_GMD_GCC_50 : ST_MKS_422 := (q_xGaugeConnected := TRUE);
st_EM1K0_GMD_GCC_60 : ST_MKS_422 := (q_xGaugeConnected := TRUE);
st_EM1K0_GMD_GCC_70 : ST_MKS_422 := (q_xGaugeConnected := TRUE);

// FB_MKS_422

fb_EM1K0_GMD_GCC_10 : FB_MKS_422;
fb_EM1K0_GMD_GCC_20 : FB_MKS_422;
fb_EM1K0_GMD_GCC_30 : FB_MKS_422;
fb_EM1K0_GMD_GCC_40 : FB_MKS_422;
fb_EM1K0_GMD_GCC_50 : FB_MKS_422;
fb_EM1K0_GMD_GCC_60 : FB_MKS_422;
fb_EM1K0_GMD_GCC_70 : FB_MKS_422;

// FB_RoughPump

fb_EM1K0_GMD_PRT_40 : FB_RoughPump;

END_VAR
```


GVLs/GVL_VARIABLES.TcGVL (TcPlcObject)
--------------------------------------

### GVL_VARIABLES: Declaration

```vhdl
{attribute 'global_init_slot' := '40500'} // make sure variables are initialized before other GVLs
VAR_GLOBAL

Global_Leak : REAL := 0;
Global_Pressure : REAL := 0.0079;
New_Pressure : REAL := 22.0; //Torr
Global_OverridePressure : BOOL := FALSE;

END_VAR
```


POUs/MAIN.TcPOU (TcPlcObject)
-----------------------------

### MAIN: Declaration

```vhdl
PROGRAM MAIN
VAR
END_VAR
```

### MAIN: ST

```vhdl
PRG_DIAGNOSTIC();
OverridePressure();
PRG_GMD();
```


POUs/OverridePressure.TcPOU (TcPlcObject)
-----------------------------------------

### OverridePressure: Declaration

```vhdl
PROGRAM OverridePressure
VAR
	fb_SetPressure : FB_SetChamberPressure;
END_VAR
```

### OverridePressure: ST

```vhdl
fb_SetPressure(chamber := st_GMD, rNewPressure := New_Pressure, Override := Global_OverridePressure);
```


POUs/PRG_DIAGNOSTIC.TcPOU (TcPlcObject)
---------------------------------------

### PRG_DIAGNOSTIC: Declaration

```vhdl
PROGRAM PRG_DIAGNOSTIC
VAR
   heartbeat AT %Q* : UINT := 0;
END_VAR
```

### PRG_DIAGNOSTIC: ST

```vhdl
heartbeat := heartbeat + 1;
IF heartbeat > 65000
   THEN heartbeat := 0;
END_IF
```


POUs/PRG_GMD.TcPOU (TcPlcObject)
--------------------------------

### PRG_GMD: Declaration

```vhdl
PROGRAM PRG_GMD
VAR
END_VAR
```

### PRG_GMD: ST

```vhdl
// FB_MKS_275

fb_EM1K0_GMD_GPI_10(stVolume := st_GMD, stGauge := st_EM1K0_GMD_GPI_10);
fb_EM1K0_GMD_GPI_40(stVolume := st_GMD, stGauge := st_EM1K0_GMD_GPI_40);
fb_EM1K0_GMD_GPI_70(stVolume := st_GMD, stGauge := st_EM1K0_GMD_GPI_70);

// FB_TurboPump

fb_EM1K0_GMD_PTM_10(stVlInlet := st_EM1K0_GMD_VRC_10_VOL, stVlOutlet := st_RoughingLine, stPump := st_EM1K0_GMD_PTM_10);
fb_EM1K0_GMD_PTM_20(stVlInlet := st_EM1K0_GMD_VRC_20_VOL, stVlOutlet := st_RoughingLine, stPump := st_EM1K0_GMD_PTM_20);
fb_EM1K0_GMD_PTM_30(stVlInlet := st_EM1K0_GMD_VRC_30_VOL, stVlOutlet := st_RoughingLine, stPump := st_EM1K0_GMD_PTM_30);
fb_EM1K0_GMD_PTM_40(stVlInlet := st_GMD, stVlOutlet := st_RoughingLine, stPump := st_EM1K0_GMD_PTM_40);
fb_EM1K0_GMD_PTM_50(stVlInlet := st_EM1K0_GMD_VRC_50_VOL, stVlOutlet := st_RoughingLine, stPump := st_EM1K0_GMD_PTM_50);
fb_EM1K0_GMD_PTM_60(stVlInlet := st_EM1K0_GMD_VRC_60_VOL, stVlOutlet := st_RoughingLine, stPump := st_EM1K0_GMD_PTM_60);
fb_EM1K0_GMD_PTM_70(stVlInlet := st_EM1K0_GMD_VRC_70_VOL, stVlOutlet := st_RoughingLine, stPump := st_EM1K0_GMD_PTM_70);

// FB_VacuumValve

fb_EM1K0_GMD_VRC_10(stAVol := st_GMD, stBvol := st_EM1K0_GMD_VRC_10_VOL, stValve := st_EM1K0_GMD_VRC_10);
fb_EM1K0_GMD_VRC_20(stAVol := st_GMD, stBvol := st_EM1K0_GMD_VRC_20_VOL, stValve := st_EM1K0_GMD_VRC_20);
fb_EM1K0_GMD_VRC_30(stAVol := st_GMD, stBvol := st_EM1K0_GMD_VRC_30_VOL, stValve := st_EM1K0_GMD_VRC_30);
fb_EM1K0_GMD_VRC_50(stAVol := st_GMD, stBvol := st_EM1K0_GMD_VRC_50_VOL, stValve := st_EM1K0_GMD_VRC_50);
fb_EM1K0_GMD_VRC_60(stAVol := st_GMD, stBvol := st_EM1K0_GMD_VRC_60_VOL, stValve := st_EM1K0_GMD_VRC_60);
fb_EM1K0_GMD_VRC_70(stAVol := st_GMD, stBvol := st_EM1K0_GMD_VRC_70_VOL, stValve := st_EM1K0_GMD_VRC_70);

// FB_MKS_422

fb_EM1K0_GMD_GCC_10(stVolume := st_GMD, stGauge := st_EM1K0_GMD_GCC_10);
fb_EM1K0_GMD_GCC_20(stVolume := st_GMD, stGauge := st_EM1K0_GMD_GCC_20);
fb_EM1K0_GMD_GCC_30(stVolume := st_GMD, stGauge := st_EM1K0_GMD_GCC_30);
fb_EM1K0_GMD_GCC_40(stVolume := st_GMD, stGauge := st_EM1K0_GMD_GCC_40);
fb_EM1K0_GMD_GCC_50(stVolume := st_GMD, stGauge := st_EM1K0_GMD_GCC_50);
fb_EM1K0_GMD_GCC_60(stVolume := st_GMD, stGauge := st_EM1K0_GMD_GCC_60);
fb_EM1K0_GMD_GCC_70(stVolume := st_GMD, stGauge := st_EM1K0_GMD_GCC_70);

// FB_RoughPump

fb_EM1K0_GMD_PRT_40(stVolInlet := st_RoughingLine, stPump := st_EM1K0_GMD_PRT_40);
```


SimTask.TcTTO (TcPlcObject)
---------------------------


Symbols
-------

    Constants.CompilerVersion : VERSION (4487872 64)
    Constants.CompilerVersionNumeric : DWORD (4488000 32)
    Constants.RuntimeVersion : VERSION (4487808 64)
    Constants.RuntimeVersionNumeric : DWORD (4487968 32)
    Constants.bFPUSupport : BOOL (4478296 8)
    Constants.bLittleEndian : BOOL (4447032 8)
    Constants.bSimulationMode : BOOL (4448120 8)
    Constants.nPackMode : UINT (4487952 16)
    Constants.nRegisterSize : WORD (4487936 16)
    DefaultGlobals.stSys : LCLS_General.ST_System (4096000 88)
    GVL_GMD.fb_EM1K0_GMD_GCC_10 : Vacuum_System_Simulator_Library.FB_MKS_422 (4486496 160)
    GVL_GMD.fb_EM1K0_GMD_GCC_20 : Vacuum_System_Simulator_Library.FB_MKS_422 (4486656 160)
    GVL_GMD.fb_EM1K0_GMD_GCC_30 : Vacuum_System_Simulator_Library.FB_MKS_422 (4486816 160)
    GVL_GMD.fb_EM1K0_GMD_GCC_40 : Vacuum_System_Simulator_Library.FB_MKS_422 (4486976 160)
    GVL_GMD.fb_EM1K0_GMD_GCC_50 : Vacuum_System_Simulator_Library.FB_MKS_422 (4487136 160)
    GVL_GMD.fb_EM1K0_GMD_GCC_60 : Vacuum_System_Simulator_Library.FB_MKS_422 (4487296 160)
    GVL_GMD.fb_EM1K0_GMD_GCC_70 : Vacuum_System_Simulator_Library.FB_MKS_422 (4487456 160)
    GVL_GMD.fb_EM1K0_GMD_GPI_10 : Vacuum_System_Simulator_Library.FB_MKS_275 (4453888 4224)
    GVL_GMD.fb_EM1K0_GMD_GPI_40 : Vacuum_System_Simulator_Library.FB_MKS_275 (4458112 4224)
    GVL_GMD.fb_EM1K0_GMD_GPI_70 : Vacuum_System_Simulator_Library.FB_MKS_275 (4462336 4224)
    GVL_GMD.fb_EM1K0_GMD_PRT_40 : Vacuum_System_Simulator_Library.FB_RoughPump (4487616 96)
    GVL_GMD.fb_EM1K0_GMD_PTM_10 : Vacuum_System_Simulator_Library.FB_TurboPump (4475264 416)
    GVL_GMD.fb_EM1K0_GMD_PTM_20 : Vacuum_System_Simulator_Library.FB_TurboPump (4475680 416)
    GVL_GMD.fb_EM1K0_GMD_PTM_30 : Vacuum_System_Simulator_Library.FB_TurboPump (4476096 416)
    GVL_GMD.fb_EM1K0_GMD_PTM_40 : Vacuum_System_Simulator_Library.FB_TurboPump (4476512 416)
    GVL_GMD.fb_EM1K0_GMD_PTM_50 : Vacuum_System_Simulator_Library.FB_TurboPump (4476928 416)
    GVL_GMD.fb_EM1K0_GMD_PTM_60 : Vacuum_System_Simulator_Library.FB_TurboPump (4477344 416)
    GVL_GMD.fb_EM1K0_GMD_PTM_70 : Vacuum_System_Simulator_Library.FB_TurboPump (4477760 416)
    GVL_GMD.fb_EM1K0_GMD_VRC_10 : Vacuum_System_Simulator_Library.FB_VacuumValve (4478304 992)
    GVL_GMD.fb_EM1K0_GMD_VRC_20 : Vacuum_System_Simulator_Library.FB_VacuumValve (4479296 992)
    GVL_GMD.fb_EM1K0_GMD_VRC_30 : Vacuum_System_Simulator_Library.FB_VacuumValve (4480288 992)
    GVL_GMD.fb_EM1K0_GMD_VRC_50 : Vacuum_System_Simulator_Library.FB_VacuumValve (4481280 992)
    GVL_GMD.fb_EM1K0_GMD_VRC_60 : Vacuum_System_Simulator_Library.FB_VacuumValve (4482272 992)
    GVL_GMD.fb_EM1K0_GMD_VRC_70 : Vacuum_System_Simulator_Library.FB_VacuumValve (4483264 992)
    GVL_GMD.st_EM1K0_GMD_GCC_10 : Vacuum_System_Simulator_Library.ST_MKS_422 (4484256 320)
    GVL_GMD.st_EM1K0_GMD_GCC_20 : Vacuum_System_Simulator_Library.ST_MKS_422 (4484576 320)
    GVL_GMD.st_EM1K0_GMD_GCC_30 : Vacuum_System_Simulator_Library.ST_MKS_422 (4484896 320)
    GVL_GMD.st_EM1K0_GMD_GCC_40 : Vacuum_System_Simulator_Library.ST_MKS_422 (4485216 320)
    GVL_GMD.st_EM1K0_GMD_GCC_50 : Vacuum_System_Simulator_Library.ST_MKS_422 (4485536 320)
    GVL_GMD.st_EM1K0_GMD_GCC_60 : Vacuum_System_Simulator_Library.ST_MKS_422 (4485856 320)
    GVL_GMD.st_EM1K0_GMD_GCC_70 : Vacuum_System_Simulator_Library.ST_MKS_422 (4486176 320)
    GVL_GMD.st_EM1K0_GMD_GPI_10 : Vacuum_System_Simulator_Library.ST_MKS_275 (4448128 1920)
    GVL_GMD.st_EM1K0_GMD_GPI_40 : Vacuum_System_Simulator_Library.ST_MKS_275 (4450048 1920)
    GVL_GMD.st_EM1K0_GMD_GPI_70 : Vacuum_System_Simulator_Library.ST_MKS_275 (4451968 1920)
    GVL_GMD.st_EM1K0_GMD_PRT_40 : Vacuum_System_Simulator_Library.ST_MechPump (4469824 1088)
    GVL_GMD.st_EM1K0_GMD_PTM_10 : Vacuum_System_Simulator_Library.ST_MechPump (4466560 1088)
    GVL_GMD.st_EM1K0_GMD_PTM_20 : Vacuum_System_Simulator_Library.ST_MechPump (4467648 1088)
    GVL_GMD.st_EM1K0_GMD_PTM_30 : Vacuum_System_Simulator_Library.ST_MechPump (4468736 1088)
    GVL_GMD.st_EM1K0_GMD_PTM_40 : Vacuum_System_Simulator_Library.ST_MechPump (4470912 1088)
    GVL_GMD.st_EM1K0_GMD_PTM_50 : Vacuum_System_Simulator_Library.ST_MechPump (4472000 1088)
    GVL_GMD.st_EM1K0_GMD_PTM_60 : Vacuum_System_Simulator_Library.ST_MechPump (4473088 1088)
    GVL_GMD.st_EM1K0_GMD_PTM_70 : Vacuum_System_Simulator_Library.ST_MechPump (4474176 1088)
    GVL_GMD.st_EM1K0_GMD_VRC_10 : Vacuum_System_Simulator_Library.ST_VacuumValve (4448096 24)
    GVL_GMD.st_EM1K0_GMD_VRC_10_VOL : Vacuum_System_Simulator_Library.ST_Volume (4447424 96)
    GVL_GMD.st_EM1K0_GMD_VRC_20 : Vacuum_System_Simulator_Library.ST_VacuumValve (4478176 24)
    GVL_GMD.st_EM1K0_GMD_VRC_20_VOL : Vacuum_System_Simulator_Library.ST_Volume (4447616 96)
    GVL_GMD.st_EM1K0_GMD_VRC_30 : Vacuum_System_Simulator_Library.ST_VacuumValve (4478200 24)
    GVL_GMD.st_EM1K0_GMD_VRC_30_VOL : Vacuum_System_Simulator_Library.ST_Volume (4447712 96)
    GVL_GMD.st_EM1K0_GMD_VRC_50 : Vacuum_System_Simulator_Library.ST_VacuumValve (4478224 24)
    GVL_GMD.st_EM1K0_GMD_VRC_50_VOL : Vacuum_System_Simulator_Library.ST_Volume (4447808 96)
    GVL_GMD.st_EM1K0_GMD_VRC_60 : Vacuum_System_Simulator_Library.ST_VacuumValve (4478248 24)
    GVL_GMD.st_EM1K0_GMD_VRC_60_VOL : Vacuum_System_Simulator_Library.ST_Volume (4447904 96)
    GVL_GMD.st_EM1K0_GMD_VRC_70 : Vacuum_System_Simulator_Library.ST_VacuumValve (4478272 24)
    GVL_GMD.st_EM1K0_GMD_VRC_70_VOL : Vacuum_System_Simulator_Library.ST_Volume (4448000 96)
    GVL_GMD.st_GMD : Vacuum_System_Simulator_Library.ST_Volume (4447328 96)
    GVL_GMD.st_RoughingLine : Vacuum_System_Simulator_Library.ST_Volume (4447520 96)
    GVL_Logger.asLoggerMesgBuffer : Tc2_System.T_MaxString (4096144 104448)
    GVL_Logger.cnLoggerMesgArraySize : INT (4096112 16)
    GVL_Logger.cnSyslogVer : WORD (4096128 16)
    GVL_Logger.csNILVALUE : STRING(1) (4096088 16)
    GVL_Logger.fbLogMessage : LCLS_General.FB_LogMessage (4202656 24704)
    GVL_Logger.fbLoggerBuffer : Tc2_Utilities.FB_StringRingBuffer (4227360 4864)
    GVL_Logger.gsCurrentTime : Tc2_System.T_MaxString (4200592 2048)
    GVL_VARIABLES.Global_Leak : REAL (4487712 32)
    GVL_VARIABLES.Global_OverridePressure : BOOL (4438424 8)
    GVL_VARIABLES.Global_Pressure : REAL (4487744 32)
    GVL_VARIABLES.New_Pressure : REAL (4487776 32)
    GVL_VSS_CONSTANT.ATM : REAL (4438816 32)
    GVL_VSS_CONSTANT.IonMassRate : REAL (4438848 32)
    GVL_VSS_CONSTANT.tSec : INT (4438448 16)
    Global_Variables.ADSIGRP_DEVICE_DATA : UDINT (4435808 32)
    Global_Variables.ADSIGRP_IOIMAGE_CLEARI : UDINT (4435712 32)
    Global_Variables.ADSIGRP_IOIMAGE_CLEARO : UDINT (4435744 32)
    Global_Variables.ADSIGRP_IOIMAGE_RISIZE : UDINT (4435584 32)
    Global_Variables.ADSIGRP_IOIMAGE_ROSIZE : UDINT (4435680 32)
    Global_Variables.ADSIGRP_IOIMAGE_RWIB : UDINT (4435520 32)
    Global_Variables.ADSIGRP_IOIMAGE_RWIOB : UDINT (4435776 32)
    Global_Variables.ADSIGRP_IOIMAGE_RWIX : UDINT (4435552 32)
    Global_Variables.ADSIGRP_IOIMAGE_RWOB : UDINT (4435616 32)
    Global_Variables.ADSIGRP_IOIMAGE_RWOX : UDINT (4435648 32)
    Global_Variables.ADSIGRP_SYMNAME : UDINT (4435104 32)
    Global_Variables.ADSIGRP_SYMNOTE : UDINT (4435488 32)
    Global_Variables.ADSIGRP_SYMTAB : UDINT (4435072 32)
    Global_Variables.ADSIGRP_SYMVAL : UDINT (4435136 32)
    Global_Variables.ADSIGRP_SYM_DOWNLOAD : UDINT (4435392 32)
    Global_Variables.ADSIGRP_SYM_HNDBYNAME : UDINT (4435168 32)
    Global_Variables.ADSIGRP_SYM_INFOBYNAME : UDINT (4435296 32)
    Global_Variables.ADSIGRP_SYM_INFOBYNAMEEX : UDINT (4435360 32)
    Global_Variables.ADSIGRP_SYM_RELEASEHND : UDINT (4435264 32)
    Global_Variables.ADSIGRP_SYM_UPLOAD : UDINT (4435424 32)
    Global_Variables.ADSIGRP_SYM_UPLOADINFO : UDINT (4435456 32)
    Global_Variables.ADSIGRP_SYM_VALBYHND : UDINT (4435232 32)
    Global_Variables.ADSIGRP_SYM_VALBYNAME : UDINT (4435200 32)
    Global_Variables.ADSIGRP_SYM_VERSION : UDINT (4435328 32)
    Global_Variables.ADSIOFFS_DEVDATA_ADSSTATE : UDINT (4435840 32)
    Global_Variables.ADSIOFFS_DEVDATA_DEVSTATE : UDINT (4435872 32)
    Global_Variables.ADSLOG_MSGTYPE_ERROR : DWORD (4436928 32)
    Global_Variables.ADSLOG_MSGTYPE_HINT : DWORD (4436864 32)
    Global_Variables.ADSLOG_MSGTYPE_LOG : DWORD (4436960 32)
    Global_Variables.ADSLOG_MSGTYPE_MSGBOX : DWORD (4436992 32)
    Global_Variables.ADSLOG_MSGTYPE_RESOURCE : DWORD (4437024 32)
    Global_Variables.ADSLOG_MSGTYPE_STRING : DWORD (4437056 32)
    Global_Variables.ADSLOG_MSGTYPE_WARN : DWORD (4436896 32)
    Global_Variables.ADSSTATE_CONFIG : UINT (4434976 16)
    Global_Variables.ADSSTATE_ERROR : UINT (4434912 16)
    Global_Variables.ADSSTATE_EXCEPTION : UINT (4435040 16)
    Global_Variables.ADSSTATE_IDLE : UINT (4434752 16)
    Global_Variables.ADSSTATE_INCOMPATIBLE : UINT (4435024 16)
    Global_Variables.ADSSTATE_INIT : UINT (4434784 16)
    Global_Variables.ADSSTATE_INVALID : UINT (4434736 16)
    Global_Variables.ADSSTATE_LOADCFG : UINT (4434864 16)
    Global_Variables.ADSSTATE_MAXSTATES : UINT (4435056 16)
    Global_Variables.ADSSTATE_POWERFAILURE : UINT (4434880 16)
    Global_Variables.ADSSTATE_POWERGOOD : UINT (4434896 16)
    Global_Variables.ADSSTATE_RECONFIG : UINT (4434992 16)
    Global_Variables.ADSSTATE_RESET : UINT (4434768 16)
    Global_Variables.ADSSTATE_RESUME : UINT (4434960 16)
    Global_Variables.ADSSTATE_RUN : UINT (4434816 16)
    Global_Variables.ADSSTATE_SAVECFG : UINT (4434848 16)
    Global_Variables.ADSSTATE_SHUTDOWN : UINT (4434928 16)
    Global_Variables.ADSSTATE_START : UINT (4434800 16)
    Global_Variables.ADSSTATE_STOP : UINT (4434832 16)
    Global_Variables.ADSSTATE_STOPPING : UINT (4435008 16)
    Global_Variables.ADSSTATE_SUSPEND : UINT (4434944 16)
    Global_Variables.AMSLOGGER_IGR_GENERAL : UDINT (4295520 32)
    Global_Variables.AMSLOGGER_IOF_MODE : UDINT (4295552 32)
    Global_Variables.AMSPORT_AMSLOGGER : UINT (4295584 16)
    Global_Variables.AMSPORT_EVENTLOG : UINT (4433712 16)
    Global_Variables.AMSPORT_LOGGER : UINT (4431984 16)
    Global_Variables.AMSPORT_R0_CAM : UINT (4434672 16)
    Global_Variables.AMSPORT_R0_CAMTOOL : UINT (4434688 16)
    Global_Variables.AMSPORT_R0_CNC : UINT (4434560 16)
    Global_Variables.AMSPORT_R0_IO : UINT (4434480 16)
    Global_Variables.AMSPORT_R0_ISG : UINT (4434544 16)
    Global_Variables.AMSPORT_R0_LINE : UINT (4434576 16)
    Global_Variables.AMSPORT_R0_NC : UINT (4434496 16)
    Global_Variables.AMSPORT_R0_NCSAF : UINT (4434512 16)
    Global_Variables.AMSPORT_R0_NCSVB : UINT (4434528 16)
    Global_Variables.AMSPORT_R0_PLC : UINT (4434592 16)
    Global_Variables.AMSPORT_R0_PLC_RTS1 : UINT (4434608 16)
    Global_Variables.AMSPORT_R0_PLC_RTS2 : UINT (4434624 16)
    Global_Variables.AMSPORT_R0_PLC_RTS3 : UINT (4434640 16)
    Global_Variables.AMSPORT_R0_PLC_RTS4 : UINT (4434656 16)
    Global_Variables.AMSPORT_R0_RTIME : UINT (4434464 16)
    Global_Variables.AMSPORT_R3_SCOPESERVER : UINT (4434720 16)
    Global_Variables.AMSPORT_R3_SYSSERV : UINT (4434704 16)
    Global_Variables.BOOTDATAFLAGS_PERSISTENT_INVALID : BYTE (4437112 8)
    Global_Variables.BOOTDATAFLAGS_PERSISTENT_LOADED : BYTE (4437104 8)
    Global_Variables.BOOTDATAFLAGS_RETAIN_INVALID : BYTE (4437088 8)
    Global_Variables.BOOTDATAFLAGS_RETAIN_LOADED : BYTE (4433704 8)
    Global_Variables.BOOTDATAFLAGS_RETAIN_REQUESTED : BYTE (4437096 8)
    Global_Variables.DATE_AND_TIME_SECPERDAY : DWORD (4308448 32)
    Global_Variables.DATE_AND_TIME_SECPERWEEK : DWORD (4308480 32)
    Global_Variables.DBG_OUTPUT_FILE : DWORD (4314752 32)
    Global_Variables.DBG_OUTPUT_LOG : DWORD (4314720 32)
    Global_Variables.DBG_OUTPUT_NONE : DWORD (4314688 32)
    Global_Variables.DBG_OUTPUT_VISU : DWORD (4314784 32)
    Global_Variables.DEFAULT_ADS_TIMEOUT : TIME (4437824 32)
    Global_Variables.DEFAULT_CSV_FIELD_DOUBLE_QUOTE : BYTE (4294264 8)
    Global_Variables.DEFAULT_CSV_FIELD_SEP : BYTE (4232288 8)
    Global_Variables.DEFAULT_CSV_RECORD_SEP_CR : BYTE (4431024 8)
    Global_Variables.DEFAULT_CSV_RECORD_SEP_LF : BYTE (4431032 8)
    Global_Variables.EMPTY_ARG_VALUE : Tc2_Utilities.T_Arg (4296128 96)
    Global_Variables.EMPTY_GUID_REGSTRING : STRING(38) (4434152 312)
    Global_Variables.EMPTY_GUID_STRING : STRING(36) (4433856 296)
    Global_Variables.EMPTY_GUID_STRUCT : GUID (4433728 128)
    Global_Variables.EMPTY_ROUTE_ENTRY : Tc2_Utilities.ST_AmsRouteEntry (4294272 1184)
    Global_Variables.FLOATREC_EXP_IS_INF : INT (4295632 16)
    Global_Variables.FLOATREC_EXP_IS_NAN : INT (4295616 16)
    Global_Variables.FLOATREC_MAX_DIGITS : INT (4295648 16)
    Global_Variables.FLOATREC_MAX_PRECISION : INT (4295664 16)
    Global_Variables.FLOATREC_MIN_PRECISION : INT (4295680 16)
    Global_Variables.FMTERR_ARGTYPEINVALID : DWORD (4296000 32)
    Global_Variables.FMTERR_ASTERISKPOSITION : DWORD (4295776 32)
    Global_Variables.FMTERR_DESTBUFFOVERFLOW : DWORD (4296096 32)
    Global_Variables.FMTERR_FLAGPOSITION : DWORD (4295872 32)
    Global_Variables.FMTERR_INSUFFICIENTARGS : DWORD (4296064 32)
    Global_Variables.FMTERR_NOERROR : DWORD (4295712 32)
    Global_Variables.FMTERR_PERCENTSIGNPOSITION : DWORD (4295744 32)
    Global_Variables.FMTERR_PRECISIONDOTPOSITION : DWORD (4295936 32)
    Global_Variables.FMTERR_PRECISIONVALUE : DWORD (4295840 32)
    Global_Variables.FMTERR_TYPEFIELDVALUE : DWORD (4295968 32)
    Global_Variables.FMTERR_UNACCEPTEDPARAMETER : DWORD (4296032 32)
    Global_Variables.FMTERR_WIDTHPRECISIONVALPOS : DWORD (4295904 32)
    Global_Variables.FMTERR_WIDTHVALUE : DWORD (4295808 32)
    Global_Variables.FOPEN_MODEAPPEND : DWORD (4437216 32)
    Global_Variables.FOPEN_MODEBINARY : DWORD (4437280 32)
    Global_Variables.FOPEN_MODEPLUS : DWORD (4437248 32)
    Global_Variables.FOPEN_MODEREAD : DWORD (4437152 32)
    Global_Variables.FOPEN_MODETEXT : DWORD (4437312 32)
    Global_Variables.FOPEN_MODEWRITE : DWORD (4437184 32)
    Global_Variables.FORMAT_DECASC_CODES : BYTE (4296480 80)
    Global_Variables.FORMAT_HEXASC_CODES : BYTE (4296224 256)
    Global_Variables.FORMAT_MAX_ARGS : INT (4295600 16)
    Global_Variables.GLOBAL_DCF77_PULSE_SPLIT : TIME (4232256 32)
    Global_Variables.GLOBAL_DCF77_SEQUENCE_CHECK : BOOL (4096104 8)
    Global_Variables.GLOBAL_FORMAT_HASH_PREFIX_TYPE : Tc2_Utilities.E_HashPrefixTypes (4232224 16)
    Global_Variables.GLOBAL_SBCS_TABLE : Tc2_Utilities.E_SBCSType (4232240 16)
    Global_Variables.HKEY_MAX_BINARY_DATA_SIZE : UDINT (4295488 32)
    Global_Variables.IPHELPERAPI_ADAPTERSINFO : UDINT (4293952 32)
    Global_Variables.IPHELPERAPI_IPADDRBYHOSTNAME : UDINT (4293984 32)
    Global_Variables.MAX_ADAPTER_ADDRESS_LENGTH : UDINT (4293856 32)
    Global_Variables.MAX_ADAPTER_DESCRIPTION_LENGTH : UDINT (4293824 32)
    Global_Variables.MAX_ADAPTER_NAME_LENGTH : UDINT (4293792 32)
    Global_Variables.MAX_AVERAGE_MEASURES : INT (4202640 16)
    Global_Variables.MAX_LOCAL_ADAPTERS : UDINT (4294016 32)
    Global_Variables.MAX_REMOTE_PCS : INT (4232304 16)
    Global_Variables.MAX_ROUTE_ADDR_LEN : BYTE (4294240 8)
    Global_Variables.MAX_ROUTE_NAME_LEN : BYTE (4232296 8)
    Global_Variables.MAX_ROUTE_TRANSPORT : BYTE (4294256 8)
    Global_Variables.MAX_STRING_LENGTH : UDINT (4437856 32)
    Global_Variables.MIN_ROUTE_TRANSPORT : BYTE (4294248 8)
    Global_Variables.PI : LREAL (4437760 64)
    Global_Variables.ROUTE_FLAG_DYNAMIC : DWORD (4294176 32)
    Global_Variables.ROUTE_FLAG_NOOVERRIDE : DWORD (4294208 32)
    Global_Variables.ROUTE_FLAG_TEMPORARY : DWORD (4294144 32)
    Global_Variables.SYSTEMSERVICE_ADDREMOTE : UDINT (4294048 32)
    Global_Variables.SYSTEMSERVICE_CHANGENETID : UDINT (4436672 32)
    Global_Variables.SYSTEMSERVICE_CLOSEHANDLE : UDINT (4436032 32)
    Global_Variables.SYSTEMSERVICE_CREATEFILE : UDINT (4436000 32)
    Global_Variables.SYSTEMSERVICE_DELREMOTE : UDINT (4294080 32)
    Global_Variables.SYSTEMSERVICE_ENUMREMOTE : UDINT (4294112 32)
    Global_Variables.SYSTEMSERVICE_FCLOSE : UDINT (4436096 32)
    Global_Variables.SYSTEMSERVICE_FDELETE : UDINT (4436416 32)
    Global_Variables.SYSTEMSERVICE_FEOF : UDINT (4436384 32)
    Global_Variables.SYSTEMSERVICE_FFILEFIND : UDINT (4295456 32)
    Global_Variables.SYSTEMSERVICE_FGETS : UDINT (4436256 32)
    Global_Variables.SYSTEMSERVICE_FOPEN : UDINT (4436064 32)
    Global_Variables.SYSTEMSERVICE_FPRINTF : UDINT (4436352 32)
    Global_Variables.SYSTEMSERVICE_FPUTS : UDINT (4436288 32)
    Global_Variables.SYSTEMSERVICE_FREAD : UDINT (4436128 32)
    Global_Variables.SYSTEMSERVICE_FRENAME : UDINT (4436448 32)
    Global_Variables.SYSTEMSERVICE_FSCANF : UDINT (4436320 32)
    Global_Variables.SYSTEMSERVICE_FSEEK : UDINT (4436192 32)
    Global_Variables.SYSTEMSERVICE_FTELL : UDINT (4436224 32)
    Global_Variables.SYSTEMSERVICE_FWRITE : UDINT (4436160 32)
    Global_Variables.SYSTEMSERVICE_IPHELPERAPI : UDINT (4293888 32)
    Global_Variables.SYSTEMSERVICE_IPHOSTNAME : UDINT (4293920 32)
    Global_Variables.SYSTEMSERVICE_MKDIR : UDINT (4436480 32)
    Global_Variables.SYSTEMSERVICE_OPENCREATE : UDINT (4435904 32)
    Global_Variables.SYSTEMSERVICE_OPENREAD : UDINT (4435936 32)
    Global_Variables.SYSTEMSERVICE_OPENWRITE : UDINT (4435968 32)
    Global_Variables.SYSTEMSERVICE_REG_HKEYLOCALMACHINE : UDINT (4436544 32)
    Global_Variables.SYSTEMSERVICE_RMDIR : UDINT (4436512 32)
    Global_Variables.SYSTEMSERVICE_SENDEMAIL : UDINT (4436576 32)
    Global_Variables.SYSTEMSERVICE_STARTPROCESS : UDINT (4436640 32)
    Global_Variables.SYSTEMSERVICE_TIMESERVICES : UDINT (4436608 32)
    Global_Variables.SYSTEMSTATEFLAGS_BSOD : BYTE (4437120 8)
    Global_Variables.SYSTEMSTATEFLAGS_RTVIOLATION : BYTE (4437128 8)
    Global_Variables.SYSTEMTIME_DATEDELTA_OFFSET : DWORD (4302816 32)
    Global_Variables.SYSTEMTIME_DATE_AND_TIME_MAX : Tc2_Utilities.T_ULARGE_INTEGER (4303104 64)
    Global_Variables.SYSTEMTIME_DATE_AND_TIME_MAX64 : ULINT (4303424 64)
    Global_Variables.SYSTEMTIME_DATE_AND_TIME_MIN : Tc2_Utilities.T_ULARGE_INTEGER (4303040 64)
    Global_Variables.SYSTEMTIME_DATE_AND_TIME_MIN64 : ULINT (4303360 64)
    Global_Variables.SYSTEMTIME_MAX_MONTHDAYS : WORD (4301968 384)
    Global_Variables.SYSTEMTIME_MAX_YEARSDAY : WORD (4302352 448)
    Global_Variables.SYSTEMTIME_TICKSPERDAY : Tc2_Utilities.T_ULARGE_INTEGER (4302976 64)
    Global_Variables.SYSTEMTIME_TICKSPERDAY64 : ULINT (4303296 64)
    Global_Variables.SYSTEMTIME_TICKSPERMSEC : Tc2_Utilities.T_ULARGE_INTEGER (4302848 64)
    Global_Variables.SYSTEMTIME_TICKSPERMSEC64 : ULINT (4303168 64)
    Global_Variables.SYSTEMTIME_TICKSPERSEC : Tc2_Utilities.T_ULARGE_INTEGER (4302912 64)
    Global_Variables.SYSTEMTIME_TICKSPERSEC64 : ULINT (4303232 64)
    Global_Variables.TCEVENTFLAG_AUTOFMTALL : WORD (4437632 16)
    Global_Variables.TCEVENTFLAG_FMTSELF : WORD (4437568 16)
    Global_Variables.TCEVENTFLAG_LOG : WORD (4437584 16)
    Global_Variables.TCEVENTFLAG_MSGBOX : WORD (4437600 16)
    Global_Variables.TCEVENTFLAG_PRIOCLASS : WORD (4437136 16)
    Global_Variables.TCEVENTFLAG_SRCID : WORD (4437616 16)
    Global_Variables.TCEVENTSTATE_CONFIRMED : WORD (4437696 16)
    Global_Variables.TCEVENTSTATE_INVALID : WORD (4437648 16)
    Global_Variables.TCEVENTSTATE_RESET : WORD (4437680 16)
    Global_Variables.TCEVENTSTATE_RESETCON : WORD (4437712 16)
    Global_Variables.TCEVENTSTATE_SIGNALED : WORD (4437664 16)
    Global_Variables.TCEVENT_FMTPRGSIZE : INT (4437744 16)
    Global_Variables.TCEVENT_SRCNAMESIZE : INT (4437728 16)
    Global_Variables.TIMESERVICE_ADJUSTTIMETORTC : UDINT (4436800 32)
    Global_Variables.TIMESERVICE_DATEANDTIME : UDINT (4436704 32)
    Global_Variables.TIMESERVICE_RTCTIMEDIFF : UDINT (4436768 32)
    Global_Variables.TIMESERVICE_SYSTEMTIMES : UDINT (4436736 32)
    Global_Variables.TIMESERVICE_TIMEZONINFORMATION : UDINT (4436832 32)
    Global_Variables.WEST_EUROPE_TZI : Tc2_Utilities.ST_TimeZoneInformation (4303488 864)
    Global_Variables.eWatchdogConfig : Tc2_System.E_WATCHDOG_TIME_CONFIG (4438400 16)
    Global_Variables.nCTRL_LOGGER_DATA_ARRAY_SIZE : UINT (4438432 16)
    Global_Variables.nWatchdogTime : BYTE (4438416 8)
    Global_Variables.stCtrl_GLOBAL_CycleTimeInterpretation : Vacuum_System_Simulator_Library.Tc2_ControllerToolbox.ST_CTRL_CYCLE_TIME_INTERPRETATION (4438464 128)
    LCLS_General.DefaultGlobals.stSys.I_EcatMaster1 : AMSNETID (4096040 48)
    OverridePressure.fb_SetPressure : Vacuum_System_Simulator_Library.FB_SetChamberPressure (4447200 128)
    PRG_DIAGNOSTIC.heartbeat : UINT (4447008 16)
    TwinCAT_LicenseInfoVarList._LicenseInfo : PlcLicenseInfo (4488032 1024)
    TwinCAT_SystemInfoVarList._AppInfo : PlcAppSystemInfo (4489056 2048)
    TwinCAT_SystemInfoVarList._TaskInfo : PlcTaskSystemInfo (4491136 1024)
    TwinCAT_SystemInfoVarList._TaskOid_SimTask : OTCID (4492160 32)
    TwinCAT_SystemInfoVarList._TaskPouOid_SimTask : OTCID (4491104 32)
    TwinCAT_SystemInfoVarList.__SimTask : _Implicit_Task_Info (4492192 704)

Boxes
-----

    1.) EK1200_00_00
    2.) EL3064_00_01
    3.) EL1008_00_03
    4.) EL2008_00_05
    5.) EL2794_00_06
    6.) EK1110_00_07
    7.) EK1100_01_00
    8.) EL2794_01_01
    9.) EL3068_01_02
    10.) EL3068_01_04
    11.) EL2794_01_05
    12.) EL2794_01_06
    13.) EL3068_01_07
    14.) EL3068_01_09
    15.) EL2794_01_10
    16.) EK1110_01_11
    17.) EK1100_02_00
    18.) EL1004_02_01
    19.) EL2004_02_02
    20.) EL1004_02_03
    21.) EL1004_02_04
    22.) EL2004_02_05
    23.) EL1004_02_06
    24.) EL9410_02_07
    25.) EL1088_02_08
    26.) EL2088_02_10
    27.) EL1088_02_11
    28.) EL1088_02_12
    29.) EL2088_02_14
    30.) EL1088_02_15
    31.) EK1110_02_16
    32.) EK1100_03_00
    33.) EL2794_03_01
    34.) EL3068_03_02
    35.) EL3068_03_04
    36.) EL2794_03_05
    37.) EL2794_03_06
    38.) EL1004_03_07
    39.) Term 39 (EL9011)
    40.) EK1100_04_00
    41.) Box 8 (EP4374-0002)
    42.) Box 9 (EP5101-0011)
    43.) Box 10 (EP7041-0002)
    44.) ES2004_04_02
    45.) ES2004_04_01
    46.) ES3064_04_03
    47.) ES9070_04_04
    48.) ES3202_04_05
    49.) EL3054_04_06
    50.) ES3064_04_07
    51.) ES9070_04_08
    52.) ES1008_04_09
    53.) EL9184_04_10
    54.) ES2008_04_11
    55.) EL2794_04_12
    56.) EK1110_04_13
NC axes
-------

    3.) 'VGP_40':
        CreateSymbols = 'true'
        AxisType = 1
        Id = 3
        General:UnitName = 'steps'
        Velo:SlowManual = 20
        Velo:FastManual = 30
        Velo:Maximum = 1800
        OtherSettings:AllowMotionCmdToSlave = 'true'
        Enc:EncType = 4
        Enc:ScaleFactorNumerator = 0.0390625
        Enc:Inverse = 'true'
        Enc:MaxCount = '#x0000ffff'
        Enc:SoftEndMinControl:Enable = 'true'
        Enc:SoftEndMinControl:Range = -20
        Enc:SoftEndMaxControl:Enable = 'true'
        Enc:SoftEndMaxControl:Range = 1650
        Enc:Inc:RefMode = 2
        Enc:Inc:RefSoftSyncMask = '#x0000ffff'

Links
-----

    1.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Drive^Inputs^In^nState1')
          B ('TIID^Device 1 (EtherCAT)^Box 10 (EP7041-0002)', 'STM Status^Status^Error')
    2.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Drive^Inputs^In^nState1')
          B ('TIID^Device 1 (EtherCAT)^Box 10 (EP7041-0002)', 'STM Status^Status^Moving negative')
    3.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Drive^Inputs^In^nState1')
          B ('TIID^Device 1 (EtherCAT)^Box 10 (EP7041-0002)', 'STM Status^Status^Moving positive')
    4.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Drive^Inputs^In^nState1')
          B ('TIID^Device 1 (EtherCAT)^Box 10 (EP7041-0002)', 'STM Status^Status^Ready')
    5.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Drive^Inputs^In^nState1')
          B ('TIID^Device 1 (EtherCAT)^Box 10 (EP7041-0002)', 'STM Status^Status^Ready to enable')
    6.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Drive^Inputs^In^nState1')
          B ('TIID^Device 1 (EtherCAT)^Box 10 (EP7041-0002)', 'STM Status^Status^Torque reduced')
    7.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Drive^Inputs^In^nState1')
          B ('TIID^Device 1 (EtherCAT)^Box 10 (EP7041-0002)', 'STM Status^Status^Warning')
    8.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Drive^Inputs^In^nState2')
          B ('TIID^Device 1 (EtherCAT)^Box 10 (EP7041-0002)', 'STM Status^Status^Digital input 1')
    9.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Drive^Inputs^In^nState2')
          B ('TIID^Device 1 (EtherCAT)^Box 10 (EP7041-0002)', 'STM Status^Status^Digital input 2')
    10.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Drive^Inputs^In^nState2')
          B ('TIID^Device 1 (EtherCAT)^Box 10 (EP7041-0002)', 'STM Status^Status^Sync error')
    11.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Drive^Inputs^In^nState2')
          B ('TIID^Device 1 (EtherCAT)^Box 10 (EP7041-0002)', 'STM Status^Status^TxPDO Toggle')
    12.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Drive^Inputs^In^nState4')
          B ('TIID^Device 1 (EtherCAT)^Box 10 (EP7041-0002)', 'WcState^InputToggle')
    13.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Drive^Inputs^In^nState4')
          B ('TIID^Device 1 (EtherCAT)^Box 10 (EP7041-0002)', 'WcState^WcState')
    14.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Drive^Outputs^Out^nCtrl1')
          B ('TIID^Device 1 (EtherCAT)^Box 10 (EP7041-0002)', 'STM Control^Control^Enable')
    15.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Drive^Outputs^Out^nCtrl1')
          B ('TIID^Device 1 (EtherCAT)^Box 10 (EP7041-0002)', 'STM Control^Control^Reduce torque')
    16.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Drive^Outputs^Out^nCtrl1')
          B ('TIID^Device 1 (EtherCAT)^Box 10 (EP7041-0002)', 'STM Control^Control^Reset')
    17.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Drive^Outputs^Out^nCtrl2')
          B ('TIID^Device 1 (EtherCAT)^Box 10 (EP7041-0002)', 'STM Control^Control^Digital output 1')
    18.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Drive^Outputs^Out^nDataOut2[0]')
          B ('TIID^Device 1 (EtherCAT)^Box 10 (EP7041-0002)', 'STM Velocity^Velocity')
    19.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Enc^Inputs^In^nDataIn1[0]')
          B ('TIID^Device 1 (EtherCAT)^Box 9 (EP5101-0011)', 'ENC Status compact^Counter value')
    20.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Enc^Inputs^In^nDataIn2[0]')
          B ('TIID^Device 1 (EtherCAT)^Box 9 (EP5101-0011)', 'ENC Status compact^Latch value')
    21.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Enc^Inputs^In^nState1')
          B ('TIID^Device 1 (EtherCAT)^Box 9 (EP5101-0011)', 'ENC Status compact^Status^Counter overflow')
    22.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Enc^Inputs^In^nState1')
          B ('TIID^Device 1 (EtherCAT)^Box 9 (EP5101-0011)', 'ENC Status compact^Status^Counter underflow')
    23.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Enc^Inputs^In^nState1')
          B ('TIID^Device 1 (EtherCAT)^Box 9 (EP5101-0011)', 'ENC Status compact^Status^Extrapolation stall')
    24.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Enc^Inputs^In^nState1')
          B ('TIID^Device 1 (EtherCAT)^Box 9 (EP5101-0011)', 'ENC Status compact^Status^Latch C valid')
    25.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Enc^Inputs^In^nState1')
          B ('TIID^Device 1 (EtherCAT)^Box 9 (EP5101-0011)', 'ENC Status compact^Status^Latch extern valid')
    26.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Enc^Inputs^In^nState1')
          B ('TIID^Device 1 (EtherCAT)^Box 9 (EP5101-0011)', 'ENC Status compact^Status^Open circuit')
    27.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Enc^Inputs^In^nState1')
          B ('TIID^Device 1 (EtherCAT)^Box 9 (EP5101-0011)', 'ENC Status compact^Status^Set counter done')
    28.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Enc^Inputs^In^nState1')
          B ('TIID^Device 1 (EtherCAT)^Box 9 (EP5101-0011)', 'ENC Status compact^Status^Status of input status')
    29.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Enc^Inputs^In^nState2')
          B ('TIID^Device 1 (EtherCAT)^Box 9 (EP5101-0011)', 'ENC Status compact^Status^Status of extern latch')
    30.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Enc^Inputs^In^nState2')
          B ('TIID^Device 1 (EtherCAT)^Box 9 (EP5101-0011)', 'ENC Status compact^Status^Status of input A')
    31.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Enc^Inputs^In^nState2')
          B ('TIID^Device 1 (EtherCAT)^Box 9 (EP5101-0011)', 'ENC Status compact^Status^Status of input B')
    32.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Enc^Inputs^In^nState2')
          B ('TIID^Device 1 (EtherCAT)^Box 9 (EP5101-0011)', 'ENC Status compact^Status^Status of input C')
    33.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Enc^Inputs^In^nState2')
          B ('TIID^Device 1 (EtherCAT)^Box 9 (EP5101-0011)', 'ENC Status compact^Status^Status of input gate')
    34.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Enc^Inputs^In^nState4')
          B ('TIID^Device 1 (EtherCAT)^Box 9 (EP5101-0011)', 'WcState^InputToggle')
    35.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Enc^Inputs^In^nState4')
          B ('TIID^Device 1 (EtherCAT)^Box 9 (EP5101-0011)', 'WcState^WcState')
    36.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Enc^Outputs^Out^nCtrl1')
          B ('TIID^Device 1 (EtherCAT)^Box 9 (EP5101-0011)', 'ENC Control compact^Control^Enable latch C')
    37.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Enc^Outputs^Out^nCtrl1')
          B ('TIID^Device 1 (EtherCAT)^Box 9 (EP5101-0011)', 'ENC Control compact^Control^Enable latch extern on negative edge')
    38.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Enc^Outputs^Out^nCtrl1')
          B ('TIID^Device 1 (EtherCAT)^Box 9 (EP5101-0011)', 'ENC Control compact^Control^Enable latch extern on positive edge')
    39.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Enc^Outputs^Out^nCtrl1')
          B ('TIID^Device 1 (EtherCAT)^Box 9 (EP5101-0011)', 'ENC Control compact^Control^Set counter')
    40.) A ('TINC^NC-Task 1 SAF^Axes^VGP_40', 'Enc^Outputs^Out^nDataOut1[0]')
          B ('TIID^Device 1 (EtherCAT)^Box 9 (EP5101-0011)', 'ENC Control compact^Set counter value')
    41.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_INJ.GCM_80.i_iPRESS_R')
          B ('TIID^Device 1 (EtherCAT)^Box 8 (EP4374-0002)', 'AI Inputs Channel 1^Value')
    42.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_INJ.VCN_40.q_iRawPosition')
          B ('TIID^Device 1 (EtherCAT)^Box 8 (EP4374-0002)', 'AO Outputs Channel 3^Analog output')
    43.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_GCC_10.q_xHV_DIS')
          B ('TIID^Device 1 (EtherCAT)^EK1100_01_00^EL2794_01_01', 'Channel 1^Output')
    44.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_GCC_20.q_xHV_DIS')
          B ('TIID^Device 1 (EtherCAT)^EK1100_01_00^EL2794_01_01', 'Channel 2^Output')
    45.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_GCC_30.q_xHV_DIS')
          B ('TIID^Device 1 (EtherCAT)^EK1100_01_00^EL2794_01_01', 'Channel 3^Output')
    46.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_GCC_50.q_xHV_DIS')
          B ('TIID^Device 1 (EtherCAT)^EK1100_01_00^EL2794_01_06', 'Channel 1^Output')
    47.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_GCC_60.q_xHV_DIS')
          B ('TIID^Device 1 (EtherCAT)^EK1100_01_00^EL2794_01_06', 'Channel 2^Output')
    48.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_GCC_70.q_xHV_DIS')
          B ('TIID^Device 1 (EtherCAT)^EK1100_01_00^EL2794_01_10', 'Channel 1^Output')
    49.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_GCC_10.i_iPRESS_R')
          B ('TIID^Device 1 (EtherCAT)^EK1100_01_00^EL3068_01_02', 'AI Standard Channel 1^Value')
    50.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_GCC_20.i_iPRESS_R')
          B ('TIID^Device 1 (EtherCAT)^EK1100_01_00^EL3068_01_02', 'AI Standard Channel 2^Value')
    51.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_GCC_30.i_iPRESS_R')
          B ('TIID^Device 1 (EtherCAT)^EK1100_01_00^EL3068_01_02', 'AI Standard Channel 3^Value')
    52.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_GCC_50.i_iPRESS_R')
          B ('TIID^Device 1 (EtherCAT)^EK1100_01_00^EL3068_01_07', 'AI Standard Channel 1^Value')
    53.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_GCC_60.i_iPRESS_R')
          B ('TIID^Device 1 (EtherCAT)^EK1100_01_00^EL3068_01_07', 'AI Standard Channel 3^Value')
    54.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_GPI_70.i_iPRESS_R')
          B ('TIID^Device 1 (EtherCAT)^EK1100_01_00^EL3068_01_07', 'AI Standard Channel 6^Value')
    55.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_GCC_70.i_iPRESS_R')
          B ('TIID^Device 1 (EtherCAT)^EK1100_01_00^EL3068_01_09', 'AI Standard Channel 1^Value')
    56.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_VRC_10.i_xClsLS')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL1004_02_01', 'Channel 2^Input')
    57.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_VRC_10.i_xOpnLS')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL1004_02_01', 'Channel 1^Input')
    58.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_VRC_20.i_xClsLS')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL1004_02_01', 'Channel 4^Input')
    59.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_VRC_20.i_xOpnLS')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL1004_02_01', 'Channel 3^Input')
    60.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_VRC_30.i_xClsLS')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL1004_02_03', 'Channel 2^Input')
    61.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_VRC_30.i_xOpnLS')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL1004_02_03', 'Channel 1^Input')
    62.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_VRC_50.i_xClsLS')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL1004_02_04', 'Channel 2^Input')
    63.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_VRC_50.i_xOpnLS')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL1004_02_04', 'Channel 1^Input')
    64.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_VRC_60.i_xClsLS')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL1004_02_04', 'Channel 4^Input')
    65.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_VRC_60.i_xOpnLS')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL1004_02_04', 'Channel 3^Input')
    66.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_VRC_70.i_xClsLS')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL1004_02_06', 'Channel 2^Input')
    67.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_VRC_70.i_xOpnLS')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL1004_02_06', 'Channel 1^Input')
    68.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_PTM_10.i_xAtSpd')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL1088_02_08', 'Channel 1^Input')
    69.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_PTM_20.i_xAtSpd')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL1088_02_08', 'Channel 3^Input')
    70.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_PTM_30.i_xAtSpd')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL1088_02_11', 'Channel 1^Input')
    71.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_PTM_40.i_xAtSpd')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL1088_02_11', 'Channel 3^Input')
    72.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_PTM_50.i_xAtSpd')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL1088_02_12', 'Channel 1^Input')
    73.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_PTM_60.i_xAtSpd')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL1088_02_12', 'Channel 3^Input')
    74.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_PTM_70.i_xAtSpd')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL1088_02_15', 'Channel 1^Input')
    75.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_VRC_10.q_xOPN_DO')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL2004_02_02', 'Channel 1^Output')
    76.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_VRC_20.q_xOPN_DO')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL2004_02_02', 'Channel 3^Output')
    77.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_VRC_30.q_xOPN_DO')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL2004_02_02', 'Channel 2^Output')
    78.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_VRC_50.q_xOPN_DO')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL2004_02_05', 'Channel 1^Output')
    79.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_VRC_60.q_xOPN_DO')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL2004_02_05', 'Channel 3^Output')
    80.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_VRC_70.q_xOPN_DO')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL2004_02_05', 'Channel 2^Output')
    81.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_PTM_10.q_RunDO')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL2088_02_10', 'Channel 1^Output')
    82.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_PTM_20.q_RunDO')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL2088_02_10', 'Channel 2^Output')
    83.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_PTM_30.q_RunDO')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL2088_02_10', 'Channel 3^Output')
    84.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_PTM_40.q_RunDO')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL2088_02_10', 'Channel 4^Output')
    85.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_PTM_50.q_RunDO')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL2088_02_14', 'Channel 1^Output')
    86.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_PTM_60.q_RunDO')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL2088_02_14', 'Channel 2^Output')
    87.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_PTM_70.q_RunDO')
          B ('TIID^Device 1 (EtherCAT)^EK1100_02_00^EL2088_02_14', 'Channel 3^Output')
    88.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_PRT_40.i_xAlarmOK')
          B ('TIID^Device 1 (EtherCAT)^EK1100_03_00^EL1004_03_07', 'Channel 2^Input')
    89.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_PRT_40.i_xIsRun')
          B ('TIID^Device 1 (EtherCAT)^EK1100_03_00^EL1004_03_07', 'Channel 1^Input')
    90.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_GCC_40.q_xHV_DIS')
          B ('TIID^Device 1 (EtherCAT)^EK1100_03_00^EL2794_03_01', 'Channel 2^Output')
    91.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_PRT_40.q_xRemote')
          B ('TIID^Device 1 (EtherCAT)^EK1100_03_00^EL2794_03_06', 'Channel 2^Output')
    92.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_PRT_40.q_xRunDo')
          B ('TIID^Device 1 (EtherCAT)^EK1100_03_00^EL2794_03_06', 'Channel 1^Output')
    93.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_GCC_40.i_iPRESS_R')
          B ('TIID^Device 1 (EtherCAT)^EK1100_03_00^EL3068_03_02', 'AI Standard Channel 3^Value')
    94.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_GPI_10.i_iPRESS_R')
          B ('TIID^Device 1 (EtherCAT)^EK1100_03_00^EL3068_03_02', 'AI Standard Channel 6^Value')
    95.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_GPI_40.i_iPRESS_R')
          B ('TIID^Device 1 (EtherCAT)^EK1100_03_00^EL3068_03_02', 'AI Standard Channel 5^Value')
    96.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_INJ.GFM_83.i_iPRESS_R')
          B ('TIID^Device 1 (EtherCAT)^EK1100_04_00^EL3054_04_06', 'AI Standard Channel 1^Value')
    97.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_INJ.GFM_84.i_iPRESS_R')
          B ('TIID^Device 1 (EtherCAT)^EK1100_04_00^EL3054_04_06', 'AI Standard Channel 2^Value')
    98.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_INJ.GFM_85.i_iPRESS_R')
          B ('TIID^Device 1 (EtherCAT)^EK1100_04_00^EL3054_04_06', 'AI Standard Channel 3^Value')
    99.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_INJ.GFM_86.i_iPRESS_R')
          B ('TIID^Device 1 (EtherCAT)^EK1100_04_00^EL3054_04_06', 'AI Standard Channel 4^Value')
    100.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_INJ.VVC_80.q_xOPN_DO')
          B ('TIID^Device 1 (EtherCAT)^EK1100_04_00^ES2004_04_01', 'Channel 1^Output')
    101.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_INJ.VVC_81.q_xOPN_DO')
          B ('TIID^Device 1 (EtherCAT)^EK1100_04_00^ES2004_04_01', 'Channel 3^Output')
    102.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_INJ.VVC_82.q_xOPN_DO')
          B ('TIID^Device 1 (EtherCAT)^EK1100_04_00^ES2004_04_01', 'Channel 4^Output')
    103.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_INJ.VVC_83.q_xOPN_DO')
          B ('TIID^Device 1 (EtherCAT)^EK1100_04_00^ES2004_04_02', 'Channel 1^Output')
    104.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_INJ.VVC_84.q_xOPN_DO')
          B ('TIID^Device 1 (EtherCAT)^EK1100_04_00^ES2004_04_02', 'Channel 2^Output')
    105.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_INJ.VVC_85.q_xOPN_DO')
          B ('TIID^Device 1 (EtherCAT)^EK1100_04_00^ES2004_04_02', 'Channel 3^Output')
    106.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_INJ.VVC_86.q_xOPN_DO')
          B ('TIID^Device 1 (EtherCAT)^EK1100_04_00^ES2004_04_02', 'Channel 4^Output')
    107.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_INJ.RTD.bError')
          B ('TIID^Device 1 (EtherCAT)^EK1100_04_00^ES3202_04_05', 'RTD Inputs Channel 1^Status^Error')
    108.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_INJ.RTD.bOverrange')
          B ('TIID^Device 1 (EtherCAT)^EK1100_04_00^ES3202_04_05', 'RTD Inputs Channel 1^Status^Overrange')
    109.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_INJ.RTD.bUnderrange')
          B ('TIID^Device 1 (EtherCAT)^EK1100_04_00^ES3202_04_05', 'RTD Inputs Channel 1^Status^Underrange')
    110.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_INJ.RTD.iRaw')
          B ('TIID^Device 1 (EtherCAT)^EK1100_04_00^ES3202_04_05', 'RTD Inputs Channel 1^Value')
    111.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_PTM_10.i_xFault')
          B ('TIID^Device 1 (EtherCAT)^EK1200_00_00^EL1008_00_03', 'Channel 1^Input')
    112.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_PTM_20.i_xFault')
          B ('TIID^Device 1 (EtherCAT)^EK1200_00_00^EL1008_00_03', 'Channel 2^Input')
    113.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_PTM_30.i_xFault')
          B ('TIID^Device 1 (EtherCAT)^EK1200_00_00^EL1008_00_03', 'Channel 3^Input')
    114.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_PTM_40.i_xFault')
          B ('TIID^Device 1 (EtherCAT)^EK1200_00_00^EL1008_00_03', 'Channel 4^Input')
    115.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_PTM_50.i_xFault')
          B ('TIID^Device 1 (EtherCAT)^EK1200_00_00^EL1008_00_03', 'Channel 5^Input')
    116.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_PTM_60.i_xFault')
          B ('TIID^Device 1 (EtherCAT)^EK1200_00_00^EL1008_00_03', 'Channel 6^Input')
    117.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Inputs^GVL_GMD.fb_EM1K0_GMD_PTM_70.i_xFault')
          B ('TIID^Device 1 (EtherCAT)^EK1200_00_00^EL1008_00_03', 'Channel 7^Input')
    118.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_PTM_10.q_RunDO')
          B ('TIID^Device 1 (EtherCAT)^EK1200_00_00^EL2008_00_05', 'Channel 1^Output')
    119.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_PTM_20.q_RunDO')
          B ('TIID^Device 1 (EtherCAT)^EK1200_00_00^EL2008_00_05', 'Channel 2^Output')
    120.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_PTM_30.q_RunDO')
          B ('TIID^Device 1 (EtherCAT)^EK1200_00_00^EL2008_00_05', 'Channel 3^Output')
    121.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_PTM_40.q_RunDO')
          B ('TIID^Device 1 (EtherCAT)^EK1200_00_00^EL2008_00_05', 'Channel 4^Output')
    122.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_PTM_50.q_RunDO')
          B ('TIID^Device 1 (EtherCAT)^EK1200_00_00^EL2008_00_05', 'Channel 5^Output')
    123.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_PTM_60.q_RunDO')
          B ('TIID^Device 1 (EtherCAT)^EK1200_00_00^EL2008_00_05', 'Channel 6^Output')
    124.) A ('TIPC^plc_kfe_gmd_vac^plc_kfe_gmd_vac Instance', 'PlcTask Outputs^GVL_GMD.fb_EM1K0_GMD_PTM_70.q_RunDO')
          B ('TIID^Device 1 (EtherCAT)^EK1200_00_00^EL2008_00_05', 'Channel 7^Output')

Pragma lint results
-------------------
```
ERROR:pytmc.bin.pragmalint:Linter error: 
POUs/FB_RTD.TcPOU:line 12:     {attribute 'pytmc' := '
    		pv: CONN
    		io: input
    		ONAM: Connected
    		ZNAM: Disconnected
    	}
INFO:pytmc.bin.pragmalint:Total pragmas found: 76 Total linter errors: 1
PLC Project (1): plc_kfe_gmd_vac
================================


DUTs/ST_HV.TcDUT (TcPlcObject)
------------------------------

    - ST_HV: Declaration - 3 pragmas


DUTs/ST_PressureSensor.TcDUT (TcPlcObject)
------------------------------------------

    - ST_PressureSensor: Declaration - 7 pragmas


DUTs/ST_VGP.TcDUT (TcPlcObject)
-------------------------------

    - ST_VGP: Declaration - 13 pragmas


GVLs/GVL_INJ.TcGVL (TcPlcObject)
--------------------------------

    - GVL_INJ: Declaration - 18 pragmas


GVLs/GVL_GMD.TcGVL (TcPlcObject)
--------------------------------

    - GVL_GMD: Declaration - 24 pragmas


POUs/FB_HighVoltage.TcPOU (TcPlcObject)
---------------------------------------

    - FB_HighVoltage: Declaration - 1 pragmas


POUs/FB_PressureTransducer.TcPOU (TcPlcObject)
----------------------------------------------

    - FB_PressureTransducer: Declaration - 1 pragmas


POUs/FB_RTD.TcPOU (TcPlcObject)
-------------------------------

    - FB_RTD: Declaration - 3 pragmas


POUs/FB_VGP.TcPOU (TcPlcObject)
-------------------------------

    - FB_VGP: Declaration - 1 pragmas


POUs/PRG_DIAGNOSTIC.TcPOU (TcPlcObject)
---------------------------------------

    - PRG_DIAGNOSTIC: Declaration - 4 pragmas

PLC Project (2): plc_kfe_gmd_vac_sim
====================================


GVLs/GVL_VARIABLES.TcGVL (TcPlcObject)
--------------------------------------

    - GVL_VARIABLES: Declaration - 1 pragmas

```
